{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "amount",
          "type": "int256"
        }
      ],
      "name": "PnlRealized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "VaultChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "deregisterBaseToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "getAccountInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "takerPositionSize",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "takerOpenNotional",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "lastTwPremiumGrowthGlobalX96",
              "type": "int256"
            }
          ],
          "internalType": "struct AccountMarket.Info",
          "name": "traderAccountInfo",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "getBase",
      "outputs": [
        {
          "internalType": "int256",
          "name": "baseAmount",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "getBaseTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "baseTokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getClearingHouseConfig",
      "outputs": [
        {
          "internalType": "address",
          "name": "clearingHouseConfig",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "accountValue",
          "type": "int256"
        }
      ],
      "name": "getLiquidatablePositionSize",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "getMarginRequirementForLiquidation",
      "outputs": [
        {
          "internalType": "int256",
          "name": "marginRequirementForLiquidation",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOrderBook",
      "outputs": [
        {
          "internalType": "address",
          "name": "orderBook",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "getPnlAndPendingFee",
      "outputs": [
        {
          "internalType": "int256",
          "name": "owedRealizedPnl",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "unrealizedPnl",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "pendingFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "getQuote",
      "outputs": [
        {
          "internalType": "int256",
          "name": "quoteAmount",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "getTakerOpenNotional",
      "outputs": [
        {
          "internalType": "int256",
          "name": "openNotional",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "getTakerPositionSize",
      "outputs": [
        {
          "internalType": "int256",
          "name": "takerPositionSize",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "getTotalAbsPositionValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalAbsPositionValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "getTotalDebtValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalDebtValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "getTotalOpenNotional",
      "outputs": [
        {
          "internalType": "int256",
          "name": "totalOpenNotional",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "getTotalPositionSize",
      "outputs": [
        {
          "internalType": "int256",
          "name": "totalPositionSize",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "getTotalPositionValue",
      "outputs": [
        {
          "internalType": "int256",
          "name": "totalPositionValue",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "hasOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "hasOrder",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "amount",
          "type": "int256"
        }
      ],
      "name": "modifyOwedRealizedPnl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "base",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "quote",
          "type": "int256"
        }
      ],
      "name": "modifyTakerBalance",
      "outputs": [
        {
          "internalType": "int256",
          "name": "takerPositionSize",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "takerOpenNotional",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "registerBaseToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "takerBase",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "takerQuote",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "realizedPnl",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "makerFee",
          "type": "int256"
        }
      ],
      "name": "settleBalanceAndDeregister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "settleOwedRealizedPnl",
      "outputs": [
        {
          "internalType": "int256",
          "name": "pnl",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "settlePositionInClosedMarket",
      "outputs": [
        {
          "internalType": "int256",
          "name": "positionNotional",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "openNotional",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "realizedPnl",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "closedPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "amount",
          "type": "int256"
        }
      ],
      "name": "settleQuoteToOwedRealizedPnl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "lastTwPremiumGrowthGlobalX96",
          "type": "int256"
        }
      ],
      "name": "updateTwPremiumGrowthGlobal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "deregisterBaseToken(address,address)": "fa8e30af",
    "getAccountInfo(address,address)": "6332fef6",
    "getBase(address,address)": "b3bd6e12",
    "getBaseTokens(address)": "af74e736",
    "getClearingHouseConfig()": "aa2a8294",
    "getLiquidatablePositionSize(address,address,int256)": "10485bec",
    "getMarginRequirementForLiquidation(address)": "f75c266d",
    "getOrderBook()": "b248c4ef",
    "getPnlAndPendingFee(address)": "bba85bcf",
    "getQuote(address,address)": "7a5b45a0",
    "getTakerOpenNotional(address,address)": "d50d01b7",
    "getTakerPositionSize(address,address)": "b2e27148",
    "getTotalAbsPositionValue(address)": "6ccdc82e",
    "getTotalDebtValue(address)": "293a5077",
    "getTotalOpenNotional(address,address)": "b3945690",
    "getTotalPositionSize(address,address)": "68f12e12",
    "getTotalPositionValue(address,address)": "3f935107",
    "getVault()": "8d928af8",
    "hasOrder(address)": "cb3c7b8e",
    "modifyOwedRealizedPnl(address,int256)": "874044f3",
    "modifyTakerBalance(address,address,int256,int256)": "3c9b5ad1",
    "registerBaseToken(address,address)": "fc737214",
    "settleBalanceAndDeregister(address,address,int256,int256,int256,int256)": "89f92177",
    "settleOwedRealizedPnl(address)": "fd6ceee5",
    "settlePositionInClosedMarket(address,address)": "5f9d05ad",
    "settleQuoteToOwedRealizedPnl(address,address,int256)": "ec647a12",
    "updateTwPremiumGrowthGlobal(address,address,int256)": "2e4586c3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"PnlRealized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"VaultChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"deregisterBaseToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"getAccountInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"takerPositionSize\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"takerOpenNotional\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastTwPremiumGrowthGlobalX96\",\"type\":\"int256\"}],\"internalType\":\"struct AccountMarket.Info\",\"name\":\"traderAccountInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"getBase\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"baseAmount\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"getBaseTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"baseTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClearingHouseConfig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"clearingHouseConfig\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"accountValue\",\"type\":\"int256\"}],\"name\":\"getLiquidatablePositionSize\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"getMarginRequirementForLiquidation\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"marginRequirementForLiquidation\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOrderBook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"orderBook\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"getPnlAndPendingFee\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"owedRealizedPnl\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"unrealizedPnl\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"pendingFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"quoteAmount\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"getTakerOpenNotional\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"openNotional\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"getTakerPositionSize\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"takerPositionSize\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"getTotalAbsPositionValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAbsPositionValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"getTotalDebtValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalDebtValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"getTotalOpenNotional\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"totalOpenNotional\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"getTotalPositionSize\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"totalPositionSize\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"getTotalPositionValue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"totalPositionValue\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"hasOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasOrder\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"modifyOwedRealizedPnl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"base\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"quote\",\"type\":\"int256\"}],\"name\":\"modifyTakerBalance\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"takerPositionSize\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"takerOpenNotional\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"registerBaseToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"takerBase\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"takerQuote\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"realizedPnl\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"makerFee\",\"type\":\"int256\"}],\"name\":\"settleBalanceAndDeregister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"settleOwedRealizedPnl\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"pnl\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"settlePositionInClosedMarket\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"positionNotional\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"openNotional\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"realizedPnl\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"closedPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"settleQuoteToOwedRealizedPnl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"lastTwPremiumGrowthGlobalX96\",\"type\":\"int256\"}],\"name\":\"updateTwPremiumGrowthGlobal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"PnlRealized(address,int256)\":{\"details\":\"Emit whenever a trader's `owedRealizedPnl` is updated\",\"params\":{\"amount\":\"The amount changed\",\"trader\":\"The address of the trader\"}},\"VaultChanged(address)\":{\"params\":{\"vault\":\"The address of the vault contract\"}}},\"kind\":\"dev\",\"methods\":{\"deregisterBaseToken(address,address)\":{\"details\":\"Only used by `ClearingHouse` contract, this function is expensive, due to for loop\",\"params\":{\"baseToken\":\"The address of the trader's base token\",\"trader\":\"The address of the trader\"}},\"getAccountInfo(address,address)\":{\"params\":{\"baseToken\":\"The address of baseToken\",\"trader\":\"The address of trader\"},\"returns\":{\"traderAccountInfo\":\"The baseToken account info of trader\"}},\"getBase(address,address)\":{\"details\":\"`base amount = takerPositionSize - orderBaseDebt`\",\"params\":{\"baseToken\":\"The address of baseToken\",\"trader\":\"The address of trader\"},\"returns\":{\"baseAmount\":\"The base amount of trader's baseToken market\"}},\"getBaseTokens(address)\":{\"params\":{\"trader\":\"The address of trader\"},\"returns\":{\"baseTokens\":\"The array of baseToken address\"}},\"getClearingHouseConfig()\":{\"returns\":{\"clearingHouseConfig\":\"The address of ClearingHouseConfig\"}},\"getLiquidatablePositionSize(address,address,int256)\":{\"params\":{\"accountValue\":\"The account value of trader\",\"baseToken\":\"The address of baseToken\",\"trader\":\"The address of trader\"},\"returns\":{\"_0\":\"liquidatablePositionSize The liquidatable position size of trader's baseToken market\"}},\"getMarginRequirementForLiquidation(address)\":{\"details\":\"This is different from `Vault._getTotalMarginRequirement()`, which is for freeCollateral calculation\",\"params\":{\"trader\":\"The address of trader\"},\"returns\":{\"marginRequirementForLiquidation\":\"It is compared with `ClearingHouse.getAccountValue` which is also an int\"}},\"getOrderBook()\":{\"returns\":{\"orderBook\":\"The address of OrderBook\"}},\"getPnlAndPendingFee(address)\":{\"params\":{\"trader\":\"The address of trader\"},\"returns\":{\"owedRealizedPnl\":\"the pnl realized already but stored temporarily in AccountBalance\",\"pendingFee\":\"the pending fee of maker earned\",\"unrealizedPnl\":\"the pnl not yet realized\"}},\"getQuote(address,address)\":{\"details\":\"`quote amount = takerOpenNotional - orderQuoteDebt`\",\"params\":{\"baseToken\":\"The address of baseToken\",\"trader\":\"The address of trader\"},\"returns\":{\"quoteAmount\":\"The quote amount of trader's baseToken market\"}},\"getTakerOpenNotional(address,address)\":{\"params\":{\"baseToken\":\"The address of baseToken\",\"trader\":\"The address of trader\"},\"returns\":{\"openNotional\":\"The taker cost of trader's baseToken\"}},\"getTakerPositionSize(address,address)\":{\"details\":\"This will only has taker position, can get maker impermanent position through `getTotalPositionSize`\",\"params\":{\"baseToken\":\"The address of baseToken\",\"trader\":\"The address of trader\"},\"returns\":{\"takerPositionSize\":\"The taker position size of trader's baseToken market\"}},\"getTotalAbsPositionValue(address)\":{\"params\":{\"trader\":\"The address of trader\"},\"returns\":{\"totalAbsPositionValue\":\"Sum up positions value of every market\"}},\"getTotalDebtValue(address)\":{\"details\":\"Total debt value will relate to `Vault.getFreeCollateral()`\",\"params\":{\"trader\":\"The address of trader\"},\"returns\":{\"totalDebtValue\":\"The debt value of trader\"}},\"getTotalOpenNotional(address,address)\":{\"params\":{\"baseToken\":\"The address of baseToken\",\"trader\":\"The address of trader\"},\"returns\":{\"totalOpenNotional\":\"the amount of quote token paid for a position when opening\"}},\"getTotalPositionSize(address,address)\":{\"details\":\"`total position size = taker position size + maker impermanent position size`\",\"params\":{\"baseToken\":\"The address of baseToken\",\"trader\":\"The address of trader\"},\"returns\":{\"totalPositionSize\":\"The total position size of trader's baseToken market\"}},\"getTotalPositionValue(address,address)\":{\"details\":\"A negative returned value is only be used when calculating pnl,we use `15 mins` twap to calc position value\",\"params\":{\"baseToken\":\"The address of baseToken\",\"trader\":\"The address of trader\"},\"returns\":{\"totalPositionValue\":\"Total position value of trader's baseToken market\"}},\"getVault()\":{\"returns\":{\"vault\":\"The address of Vault\"}},\"hasOrder(address)\":{\"params\":{\"trader\":\"The address of trader\"},\"returns\":{\"hasOrder\":\"True of false\"}},\"modifyOwedRealizedPnl(address,int256)\":{\"details\":\"Only used by `ClearingHouse` contract\",\"params\":{\"amount\":\"Modified amount of owedRealizedPnl\",\"trader\":\"The address of the trader\"}},\"modifyTakerBalance(address,address,int256,int256)\":{\"details\":\"Only used by `ClearingHouse` contract\",\"params\":{\"base\":\"Modified amount of base\",\"baseToken\":\"The address of the baseToken\",\"quote\":\"Modified amount of quote\",\"trader\":\"The address of the trader\"},\"returns\":{\"takerOpenNotional\":\"Taker open notional after modified\",\"takerPositionSize\":\"Taker position size after modified\"}},\"registerBaseToken(address,address)\":{\"details\":\"Only used by `ClearingHouse` contract\",\"params\":{\"baseToken\":\"The address of the trader's base token\",\"trader\":\"The address of the trader\"}},\"settleBalanceAndDeregister(address,address,int256,int256,int256,int256)\":{\"details\":\"Only used by `ClearingHouse` contract\",\"params\":{\"baseToken\":\"The address of the baseToken\",\"makerFee\":\"Amount of maker fee collected from pool\",\"realizedPnl\":\"Amount of pnl realized\",\"takerBase\":\"Modified amount of taker base\",\"takerQuote\":\"Modified amount of taker quote\",\"trader\":\"The address of the trader\"}},\"settleOwedRealizedPnl(address)\":{\"details\":\"Only used by `Vault.withdraw()`\",\"params\":{\"trader\":\"The address of the trader\"},\"returns\":{\"pnl\":\"Settled owedRealizedPnl\"}},\"settlePositionInClosedMarket(address,address)\":{\"details\":\"Only used by `ClearingHouse`\",\"params\":{\"baseToken\":\"The address of the trader's base token\",\"trader\":\"The address of the trader\"},\"returns\":{\"closedPrice\":\"The closed price of the closed market\",\"openNotional\":\"Taker's open notional\",\"positionNotional\":\"Taker's position notional settled with closed price\",\"realizedPnl\":\"Settled realized pnl\"}},\"settleQuoteToOwedRealizedPnl(address,address,int256)\":{\"details\":\"Only used by `ClearingHouse` contract\",\"params\":{\"amount\":\"Settled quote amount\",\"baseToken\":\"The address of the baseToken\",\"trader\":\"The address of the trader\"}},\"updateTwPremiumGrowthGlobal(address,address,int256)\":{\"details\":\"Only used by `ClearingHouse` contract\",\"params\":{\"baseToken\":\"The address of baseToken\",\"lastTwPremiumGrowthGlobalX96\":\"The last Twap Premium\",\"trader\":\"The address of trader\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deregisterBaseToken(address,address)\":{\"notice\":\"Deregister baseToken from trader accountInfo\"},\"getAccountInfo(address,address)\":{\"notice\":\"Get trader account info\"},\"getBase(address,address)\":{\"notice\":\"Get trader base amount\"},\"getBaseTokens(address)\":{\"notice\":\"Get trader registered baseTokens\"},\"getClearingHouseConfig()\":{\"notice\":\"Get `ClearingHouseConfig` address\"},\"getLiquidatablePositionSize(address,address,int256)\":{\"notice\":\"Get liquidatable position size of trader's baseToken market\"},\"getMarginRequirementForLiquidation(address)\":{\"notice\":\"Get margin requirement to check whether trader will be able to liquidate\"},\"getOrderBook()\":{\"notice\":\"Get `OrderBook` address\"},\"getPnlAndPendingFee(address)\":{\"notice\":\"Get owedRealizedPnl, unrealizedPnl and pending fee\"},\"getQuote(address,address)\":{\"notice\":\"Get trader quote amount\"},\"getTakerOpenNotional(address,address)\":{\"notice\":\"Get taker cost of trader's baseToken\"},\"getTakerPositionSize(address,address)\":{\"notice\":\"Get taker position size of trader's baseToken market\"},\"getTotalAbsPositionValue(address)\":{\"notice\":\"Get all market position abs value of trader\"},\"getTotalDebtValue(address)\":{\"notice\":\"Get total debt value of trader\"},\"getTotalOpenNotional(address,address)\":{\"notice\":\"Get total cost of trader's baseToken\"},\"getTotalPositionSize(address,address)\":{\"notice\":\"Get total position size of trader's baseToken market\"},\"getTotalPositionValue(address,address)\":{\"notice\":\"Get total position value of trader's baseToken market\"},\"getVault()\":{\"notice\":\"Get `Vault` address\"},\"hasOrder(address)\":{\"notice\":\"Check trader has open order in open/closed market.\"},\"modifyOwedRealizedPnl(address,int256)\":{\"notice\":\"Modify trader owedRealizedPnl\"},\"modifyTakerBalance(address,address,int256,int256)\":{\"notice\":\"Modify trader account balance\"},\"registerBaseToken(address,address)\":{\"notice\":\"Every time a trader's position value is checked, the base token list of this trader will be traversed; thus, this list should be kept as short as possible\"},\"settleBalanceAndDeregister(address,address,int256,int256,int256,int256)\":{\"notice\":\"Settle account balance and deregister base token\"},\"settleOwedRealizedPnl(address)\":{\"notice\":\"Settle owedRealizedPnl\"},\"settlePositionInClosedMarket(address,address)\":{\"notice\":\"Settle trader's PnL in closed market\"},\"settleQuoteToOwedRealizedPnl(address,address,int256)\":{\"notice\":\"Modify trader owedRealizedPnl\"},\"updateTwPremiumGrowthGlobal(address,address,int256)\":{\"notice\":\"Update trader Twap premium info\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/Perpfi/IAccountBalance.sol\":\"IAccountBalance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@perp/=node_modules/@perp/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/Interfaces/Perpfi/IAccountBalance.sol\":{\"keccak256\":\"0xe8401c3db8dd6dae626c8c1aa0b1c3de1b6e02e3fb126fde8af84aaa7cc28643\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0c25c85f4463324b2786e280cdbd916b279ec9ec313420b6edcfef1108233f6a\",\"dweb:/ipfs/QmQbRzQFyVtLDZvbz2ShNeMJ4BzwMyRCGbR9Vgk2A2jBQx\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "amount",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PnlRealized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "VaultChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterBaseToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountInfo",
          "outputs": [
            {
              "internalType": "struct AccountMarket.Info",
              "name": "traderAccountInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int256",
                  "name": "takerPositionSize",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "takerOpenNotional",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "lastTwPremiumGrowthGlobalX96",
                  "type": "int256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBase",
          "outputs": [
            {
              "internalType": "int256",
              "name": "baseAmount",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseTokens",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "baseTokens",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getClearingHouseConfig",
          "outputs": [
            {
              "internalType": "address",
              "name": "clearingHouseConfig",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "accountValue",
              "type": "int256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLiquidatablePositionSize",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarginRequirementForLiquidation",
          "outputs": [
            {
              "internalType": "int256",
              "name": "marginRequirementForLiquidation",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOrderBook",
          "outputs": [
            {
              "internalType": "address",
              "name": "orderBook",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPnlAndPendingFee",
          "outputs": [
            {
              "internalType": "int256",
              "name": "owedRealizedPnl",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "unrealizedPnl",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "pendingFee",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getQuote",
          "outputs": [
            {
              "internalType": "int256",
              "name": "quoteAmount",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTakerOpenNotional",
          "outputs": [
            {
              "internalType": "int256",
              "name": "openNotional",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTakerPositionSize",
          "outputs": [
            {
              "internalType": "int256",
              "name": "takerPositionSize",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalAbsPositionValue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalAbsPositionValue",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalDebtValue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalDebtValue",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalOpenNotional",
          "outputs": [
            {
              "internalType": "int256",
              "name": "totalOpenNotional",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalPositionSize",
          "outputs": [
            {
              "internalType": "int256",
              "name": "totalPositionSize",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalPositionValue",
          "outputs": [
            {
              "internalType": "int256",
              "name": "totalPositionValue",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getVault",
          "outputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasOrder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "hasOrder",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "amount",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyOwedRealizedPnl"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "base",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "quote",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyTakerBalance",
          "outputs": [
            {
              "internalType": "int256",
              "name": "takerPositionSize",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "takerOpenNotional",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerBaseToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "takerBase",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "takerQuote",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "realizedPnl",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "makerFee",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleBalanceAndDeregister"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleOwedRealizedPnl",
          "outputs": [
            {
              "internalType": "int256",
              "name": "pnl",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settlePositionInClosedMarket",
          "outputs": [
            {
              "internalType": "int256",
              "name": "positionNotional",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "openNotional",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "realizedPnl",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "closedPrice",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "amount",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleQuoteToOwedRealizedPnl"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "lastTwPremiumGrowthGlobalX96",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateTwPremiumGrowthGlobal"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deregisterBaseToken(address,address)": {
            "details": "Only used by `ClearingHouse` contract, this function is expensive, due to for loop",
            "params": {
              "baseToken": "The address of the trader's base token",
              "trader": "The address of the trader"
            }
          },
          "getAccountInfo(address,address)": {
            "params": {
              "baseToken": "The address of baseToken",
              "trader": "The address of trader"
            },
            "returns": {
              "traderAccountInfo": "The baseToken account info of trader"
            }
          },
          "getBase(address,address)": {
            "details": "`base amount = takerPositionSize - orderBaseDebt`",
            "params": {
              "baseToken": "The address of baseToken",
              "trader": "The address of trader"
            },
            "returns": {
              "baseAmount": "The base amount of trader's baseToken market"
            }
          },
          "getBaseTokens(address)": {
            "params": {
              "trader": "The address of trader"
            },
            "returns": {
              "baseTokens": "The array of baseToken address"
            }
          },
          "getClearingHouseConfig()": {
            "returns": {
              "clearingHouseConfig": "The address of ClearingHouseConfig"
            }
          },
          "getLiquidatablePositionSize(address,address,int256)": {
            "params": {
              "accountValue": "The account value of trader",
              "baseToken": "The address of baseToken",
              "trader": "The address of trader"
            },
            "returns": {
              "_0": "liquidatablePositionSize The liquidatable position size of trader's baseToken market"
            }
          },
          "getMarginRequirementForLiquidation(address)": {
            "details": "This is different from `Vault._getTotalMarginRequirement()`, which is for freeCollateral calculation",
            "params": {
              "trader": "The address of trader"
            },
            "returns": {
              "marginRequirementForLiquidation": "It is compared with `ClearingHouse.getAccountValue` which is also an int"
            }
          },
          "getOrderBook()": {
            "returns": {
              "orderBook": "The address of OrderBook"
            }
          },
          "getPnlAndPendingFee(address)": {
            "params": {
              "trader": "The address of trader"
            },
            "returns": {
              "owedRealizedPnl": "the pnl realized already but stored temporarily in AccountBalance",
              "pendingFee": "the pending fee of maker earned",
              "unrealizedPnl": "the pnl not yet realized"
            }
          },
          "getQuote(address,address)": {
            "details": "`quote amount = takerOpenNotional - orderQuoteDebt`",
            "params": {
              "baseToken": "The address of baseToken",
              "trader": "The address of trader"
            },
            "returns": {
              "quoteAmount": "The quote amount of trader's baseToken market"
            }
          },
          "getTakerOpenNotional(address,address)": {
            "params": {
              "baseToken": "The address of baseToken",
              "trader": "The address of trader"
            },
            "returns": {
              "openNotional": "The taker cost of trader's baseToken"
            }
          },
          "getTakerPositionSize(address,address)": {
            "details": "This will only has taker position, can get maker impermanent position through `getTotalPositionSize`",
            "params": {
              "baseToken": "The address of baseToken",
              "trader": "The address of trader"
            },
            "returns": {
              "takerPositionSize": "The taker position size of trader's baseToken market"
            }
          },
          "getTotalAbsPositionValue(address)": {
            "params": {
              "trader": "The address of trader"
            },
            "returns": {
              "totalAbsPositionValue": "Sum up positions value of every market"
            }
          },
          "getTotalDebtValue(address)": {
            "details": "Total debt value will relate to `Vault.getFreeCollateral()`",
            "params": {
              "trader": "The address of trader"
            },
            "returns": {
              "totalDebtValue": "The debt value of trader"
            }
          },
          "getTotalOpenNotional(address,address)": {
            "params": {
              "baseToken": "The address of baseToken",
              "trader": "The address of trader"
            },
            "returns": {
              "totalOpenNotional": "the amount of quote token paid for a position when opening"
            }
          },
          "getTotalPositionSize(address,address)": {
            "details": "`total position size = taker position size + maker impermanent position size`",
            "params": {
              "baseToken": "The address of baseToken",
              "trader": "The address of trader"
            },
            "returns": {
              "totalPositionSize": "The total position size of trader's baseToken market"
            }
          },
          "getTotalPositionValue(address,address)": {
            "details": "A negative returned value is only be used when calculating pnl,we use `15 mins` twap to calc position value",
            "params": {
              "baseToken": "The address of baseToken",
              "trader": "The address of trader"
            },
            "returns": {
              "totalPositionValue": "Total position value of trader's baseToken market"
            }
          },
          "getVault()": {
            "returns": {
              "vault": "The address of Vault"
            }
          },
          "hasOrder(address)": {
            "params": {
              "trader": "The address of trader"
            },
            "returns": {
              "hasOrder": "True of false"
            }
          },
          "modifyOwedRealizedPnl(address,int256)": {
            "details": "Only used by `ClearingHouse` contract",
            "params": {
              "amount": "Modified amount of owedRealizedPnl",
              "trader": "The address of the trader"
            }
          },
          "modifyTakerBalance(address,address,int256,int256)": {
            "details": "Only used by `ClearingHouse` contract",
            "params": {
              "base": "Modified amount of base",
              "baseToken": "The address of the baseToken",
              "quote": "Modified amount of quote",
              "trader": "The address of the trader"
            },
            "returns": {
              "takerOpenNotional": "Taker open notional after modified",
              "takerPositionSize": "Taker position size after modified"
            }
          },
          "registerBaseToken(address,address)": {
            "details": "Only used by `ClearingHouse` contract",
            "params": {
              "baseToken": "The address of the trader's base token",
              "trader": "The address of the trader"
            }
          },
          "settleBalanceAndDeregister(address,address,int256,int256,int256,int256)": {
            "details": "Only used by `ClearingHouse` contract",
            "params": {
              "baseToken": "The address of the baseToken",
              "makerFee": "Amount of maker fee collected from pool",
              "realizedPnl": "Amount of pnl realized",
              "takerBase": "Modified amount of taker base",
              "takerQuote": "Modified amount of taker quote",
              "trader": "The address of the trader"
            }
          },
          "settleOwedRealizedPnl(address)": {
            "details": "Only used by `Vault.withdraw()`",
            "params": {
              "trader": "The address of the trader"
            },
            "returns": {
              "pnl": "Settled owedRealizedPnl"
            }
          },
          "settlePositionInClosedMarket(address,address)": {
            "details": "Only used by `ClearingHouse`",
            "params": {
              "baseToken": "The address of the trader's base token",
              "trader": "The address of the trader"
            },
            "returns": {
              "closedPrice": "The closed price of the closed market",
              "openNotional": "Taker's open notional",
              "positionNotional": "Taker's position notional settled with closed price",
              "realizedPnl": "Settled realized pnl"
            }
          },
          "settleQuoteToOwedRealizedPnl(address,address,int256)": {
            "details": "Only used by `ClearingHouse` contract",
            "params": {
              "amount": "Settled quote amount",
              "baseToken": "The address of the baseToken",
              "trader": "The address of the trader"
            }
          },
          "updateTwPremiumGrowthGlobal(address,address,int256)": {
            "details": "Only used by `ClearingHouse` contract",
            "params": {
              "baseToken": "The address of baseToken",
              "lastTwPremiumGrowthGlobalX96": "The last Twap Premium",
              "trader": "The address of trader"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deregisterBaseToken(address,address)": {
            "notice": "Deregister baseToken from trader accountInfo"
          },
          "getAccountInfo(address,address)": {
            "notice": "Get trader account info"
          },
          "getBase(address,address)": {
            "notice": "Get trader base amount"
          },
          "getBaseTokens(address)": {
            "notice": "Get trader registered baseTokens"
          },
          "getClearingHouseConfig()": {
            "notice": "Get `ClearingHouseConfig` address"
          },
          "getLiquidatablePositionSize(address,address,int256)": {
            "notice": "Get liquidatable position size of trader's baseToken market"
          },
          "getMarginRequirementForLiquidation(address)": {
            "notice": "Get margin requirement to check whether trader will be able to liquidate"
          },
          "getOrderBook()": {
            "notice": "Get `OrderBook` address"
          },
          "getPnlAndPendingFee(address)": {
            "notice": "Get owedRealizedPnl, unrealizedPnl and pending fee"
          },
          "getQuote(address,address)": {
            "notice": "Get trader quote amount"
          },
          "getTakerOpenNotional(address,address)": {
            "notice": "Get taker cost of trader's baseToken"
          },
          "getTakerPositionSize(address,address)": {
            "notice": "Get taker position size of trader's baseToken market"
          },
          "getTotalAbsPositionValue(address)": {
            "notice": "Get all market position abs value of trader"
          },
          "getTotalDebtValue(address)": {
            "notice": "Get total debt value of trader"
          },
          "getTotalOpenNotional(address,address)": {
            "notice": "Get total cost of trader's baseToken"
          },
          "getTotalPositionSize(address,address)": {
            "notice": "Get total position size of trader's baseToken market"
          },
          "getTotalPositionValue(address,address)": {
            "notice": "Get total position value of trader's baseToken market"
          },
          "getVault()": {
            "notice": "Get `Vault` address"
          },
          "hasOrder(address)": {
            "notice": "Check trader has open order in open/closed market."
          },
          "modifyOwedRealizedPnl(address,int256)": {
            "notice": "Modify trader owedRealizedPnl"
          },
          "modifyTakerBalance(address,address,int256,int256)": {
            "notice": "Modify trader account balance"
          },
          "registerBaseToken(address,address)": {
            "notice": "Every time a trader's position value is checked, the base token list of this trader will be traversed; thus, this list should be kept as short as possible"
          },
          "settleBalanceAndDeregister(address,address,int256,int256,int256,int256)": {
            "notice": "Settle account balance and deregister base token"
          },
          "settleOwedRealizedPnl(address)": {
            "notice": "Settle owedRealizedPnl"
          },
          "settlePositionInClosedMarket(address,address)": {
            "notice": "Settle trader's PnL in closed market"
          },
          "settleQuoteToOwedRealizedPnl(address,address,int256)": {
            "notice": "Modify trader owedRealizedPnl"
          },
          "updateTwPremiumGrowthGlobal(address,address,int256)": {
            "notice": "Update trader Twap premium info"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@perp/=node_modules/@perp/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Interfaces/Perpfi/IAccountBalance.sol": "IAccountBalance"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Interfaces/Perpfi/IAccountBalance.sol": {
        "keccak256": "0xe8401c3db8dd6dae626c8c1aa0b1c3de1b6e02e3fb126fde8af84aaa7cc28643",
        "urls": [
          "bzz-raw://0c25c85f4463324b2786e280cdbd916b279ec9ec313420b6edcfef1108233f6a",
          "dweb:/ipfs/QmQbRzQFyVtLDZvbz2ShNeMJ4BzwMyRCGbR9Vgk2A2jBQx"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Interfaces/Perpfi/IAccountBalance.sol",
    "id": 1126,
    "exportedSymbols": {
      "AccountMarket": [
        848
      ],
      "IAccountBalance": [
        1125
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:11416:18",
    "nodes": [
      {
        "id": 839,
        "nodeType": "PragmaDirective",
        "src": "45:24:18",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 840,
        "nodeType": "PragmaDirective",
        "src": "70:19:18",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 848,
        "nodeType": "ContractDefinition",
        "src": "91:252:18",
        "nodes": [
          {
            "id": 847,
            "nodeType": "StructDefinition",
            "src": "209:132:18",
            "nodes": [],
            "canonicalName": "AccountMarket.Info",
            "members": [
              {
                "constant": false,
                "id": 842,
                "mutability": "mutable",
                "name": "takerPositionSize",
                "nameLocation": "238:17:18",
                "nodeType": "VariableDeclaration",
                "scope": 847,
                "src": "231:24:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 841,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "231:6:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 844,
                "mutability": "mutable",
                "name": "takerOpenNotional",
                "nameLocation": "272:17:18",
                "nodeType": "VariableDeclaration",
                "scope": 847,
                "src": "265:24:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 843,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "265:6:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 846,
                "mutability": "mutable",
                "name": "lastTwPremiumGrowthGlobalX96",
                "nameLocation": "306:28:18",
                "nodeType": "VariableDeclaration",
                "scope": 847,
                "src": "299:35:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 845,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "299:6:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Info",
            "nameLocation": "216:4:18",
            "scope": 848,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "AccountMarket",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          848
        ],
        "name": "AccountMarket",
        "nameLocation": "99:13:18",
        "scope": 1126,
        "usedErrors": []
      },
      {
        "id": 1125,
        "nodeType": "ContractDefinition",
        "src": "345:11115:18",
        "nodes": [
          {
            "id": 853,
            "nodeType": "EventDefinition",
            "src": "432:42:18",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 849,
              "nodeType": "StructuredDocumentation",
              "src": "377:50:18",
              "text": "@param vault The address of the vault contract"
            },
            "eventSelector": "a49691f0dd6477ccef49962612a236d252e3a31c3be8b61fa6abeff3e74a7572",
            "name": "VaultChanged",
            "nameLocation": "438:12:18",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 851,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "467:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "451:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "450:23:18"
            }
          },
          {
            "id": 860,
            "nodeType": "EventDefinition",
            "src": "636:57:18",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 854,
              "nodeType": "StructuredDocumentation",
              "src": "480:151:18",
              "text": "@dev Emit whenever a trader's `owedRealizedPnl` is updated\n @param trader The address of the trader\n @param amount The amount changed"
            },
            "eventSelector": "ebf4e69d81451d269fc4d9551b06d58bea2ed426d2c528919ce45f6070946efb",
            "name": "PnlRealized",
            "nameLocation": "642:11:18",
            "parameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 856,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "670:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "654:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 858,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "685:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "678:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "678:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "653:39:18"
            }
          },
          {
            "id": 876,
            "nodeType": "FunctionDefinition",
            "src": "1126:198:18",
            "nodes": [],
            "documentation": {
              "id": 861,
              "nodeType": "StructuredDocumentation",
              "src": "699:422:18",
              "text": "@notice Modify trader account balance\n @dev Only used by `ClearingHouse` contract\n @param trader The address of the trader\n @param baseToken The address of the baseToken\n @param base Modified amount of base\n @param quote Modified amount of quote\n @return takerPositionSize Taker position size after modified\n @return takerOpenNotional Taker open notional after modified"
            },
            "functionSelector": "3c9b5ad1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "modifyTakerBalance",
            "nameLocation": "1135:18:18",
            "parameters": {
              "id": 870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 863,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "1171:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "1163:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 865,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "1195:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "1187:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 867,
                  "mutability": "mutable",
                  "name": "base",
                  "nameLocation": "1221:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "1214:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 866,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 869,
                  "mutability": "mutable",
                  "name": "quote",
                  "nameLocation": "1242:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "1235:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 868,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1235:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1153:100:18"
            },
            "returnParameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "takerPositionSize",
                  "nameLocation": "1279:17:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "1272:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1272:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "takerOpenNotional",
                  "nameLocation": "1305:17:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "1298:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1298:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1271:52:18"
            },
            "scope": 1125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 884,
            "nodeType": "FunctionDefinition",
            "src": "1532:71:18",
            "nodes": [],
            "documentation": {
              "id": 877,
              "nodeType": "StructuredDocumentation",
              "src": "1330:197:18",
              "text": "@notice Modify trader owedRealizedPnl\n @dev Only used by `ClearingHouse` contract\n @param trader The address of the trader\n @param amount Modified amount of owedRealizedPnl"
            },
            "functionSelector": "874044f3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "modifyOwedRealizedPnl",
            "nameLocation": "1541:21:18",
            "parameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "1571:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1563:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1563:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1586:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1579:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1562:31:18"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1602:0:18"
            },
            "scope": 1125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 892,
            "nodeType": "FunctionDefinition",
            "src": "1785:93:18",
            "nodes": [],
            "documentation": {
              "id": 885,
              "nodeType": "StructuredDocumentation",
              "src": "1609:171:18",
              "text": "@notice Settle owedRealizedPnl\n @dev Only used by `Vault.withdraw()`\n @param trader The address of the trader\n @return pnl Settled owedRealizedPnl"
            },
            "functionSelector": "fd6ceee5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "settleOwedRealizedPnl",
            "nameLocation": "1794:21:18",
            "parameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 887,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "1824:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 892,
                  "src": "1816:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1816:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1815:16:18"
            },
            "returnParameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "pnl",
                  "nameLocation": "1873:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 892,
                  "src": "1866:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1866:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1865:12:18"
            },
            "scope": 1125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 902,
            "nodeType": "FunctionDefinition",
            "src": "2126:127:18",
            "nodes": [],
            "documentation": {
              "id": 893,
              "nodeType": "StructuredDocumentation",
              "src": "1884:237:18",
              "text": "@notice Modify trader owedRealizedPnl\n @dev Only used by `ClearingHouse` contract\n @param trader The address of the trader\n @param baseToken The address of the baseToken\n @param amount Settled quote amount"
            },
            "functionSelector": "ec647a12",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "settleQuoteToOwedRealizedPnl",
            "nameLocation": "2135:28:18",
            "parameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 895,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "2181:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "2173:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2173:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "2205:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "2197:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2197:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2231:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "2224:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2224:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2163:80:18"
            },
            "returnParameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2252:0:18"
            },
            "scope": 1125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 918,
            "nodeType": "FunctionDefinition",
            "src": "2703:208:18",
            "nodes": [],
            "documentation": {
              "id": 903,
              "nodeType": "StructuredDocumentation",
              "src": "2259:439:18",
              "text": "@notice Settle account balance and deregister base token\n @dev Only used by `ClearingHouse` contract\n @param trader The address of the trader\n @param baseToken The address of the baseToken\n @param takerBase Modified amount of taker base\n @param takerQuote Modified amount of taker quote\n @param realizedPnl Amount of pnl realized\n @param makerFee Amount of maker fee collected from pool"
            },
            "functionSelector": "89f92177",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "settleBalanceAndDeregister",
            "nameLocation": "2712:26:18",
            "parameters": {
              "id": 916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 905,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "2756:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "2748:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2748:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "2780:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "2772:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2772:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 909,
                  "mutability": "mutable",
                  "name": "takerBase",
                  "nameLocation": "2806:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "2799:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2799:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "takerQuote",
                  "nameLocation": "2832:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "2825:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2825:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 913,
                  "mutability": "mutable",
                  "name": "realizedPnl",
                  "nameLocation": "2859:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "2852:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2852:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 915,
                  "mutability": "mutable",
                  "name": "makerFee",
                  "nameLocation": "2887:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "2880:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 914,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2880:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2738:163:18"
            },
            "returnParameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2910:0:18"
            },
            "scope": 1125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 926,
            "nodeType": "FunctionDefinition",
            "src": "3259:71:18",
            "nodes": [],
            "documentation": {
              "id": 919,
              "nodeType": "StructuredDocumentation",
              "src": "2917:337:18",
              "text": "@notice Every time a trader's position value is checked, the base token list of this trader will be traversed;\n thus, this list should be kept as short as possible\n @dev Only used by `ClearingHouse` contract\n @param trader The address of the trader\n @param baseToken The address of the trader's base token"
            },
            "functionSelector": "fc737214",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerBaseToken",
            "nameLocation": "3268:17:18",
            "parameters": {
              "id": 924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 921,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "3294:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 926,
                  "src": "3286:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3286:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 923,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "3310:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 926,
                  "src": "3302:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3302:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3285:35:18"
            },
            "returnParameters": {
              "id": 925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3329:0:18"
            },
            "scope": 1125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 934,
            "nodeType": "FunctionDefinition",
            "src": "3605:73:18",
            "nodes": [],
            "documentation": {
              "id": 927,
              "nodeType": "StructuredDocumentation",
              "src": "3336:264:18",
              "text": "@notice Deregister baseToken from trader accountInfo\n @dev Only used by `ClearingHouse` contract, this function is expensive, due to for loop\n @param trader The address of the trader\n @param baseToken The address of the trader's base token"
            },
            "functionSelector": "fa8e30af",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deregisterBaseToken",
            "nameLocation": "3614:19:18",
            "parameters": {
              "id": 932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 929,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "3642:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "3634:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3634:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 931,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "3658:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "3650:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3650:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3633:35:18"
            },
            "returnParameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3677:0:18"
            },
            "scope": 1125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 944,
            "nodeType": "FunctionDefinition",
            "src": "3943:148:18",
            "nodes": [],
            "documentation": {
              "id": 935,
              "nodeType": "StructuredDocumentation",
              "src": "3684:254:18",
              "text": "@notice Update trader Twap premium info\n @dev Only used by `ClearingHouse` contract\n @param trader The address of trader\n @param baseToken The address of baseToken\n @param lastTwPremiumGrowthGlobalX96 The last Twap Premium"
            },
            "functionSelector": "2e4586c3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateTwPremiumGrowthGlobal",
            "nameLocation": "3952:27:18",
            "parameters": {
              "id": 942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 937,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "3997:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 944,
                  "src": "3989:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3989:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 939,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "4021:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 944,
                  "src": "4013:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4013:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 941,
                  "mutability": "mutable",
                  "name": "lastTwPremiumGrowthGlobalX96",
                  "nameLocation": "4047:28:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 944,
                  "src": "4040:35:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 940,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4040:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3979:102:18"
            },
            "returnParameters": {
              "id": 943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4090:0:18"
            },
            "scope": 1125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 960,
            "nodeType": "FunctionDefinition",
            "src": "4555:252:18",
            "nodes": [],
            "documentation": {
              "id": 945,
              "nodeType": "StructuredDocumentation",
              "src": "4097:453:18",
              "text": "@notice Settle trader's PnL in closed market\n @dev Only used by `ClearingHouse`\n @param trader The address of the trader\n @param baseToken The address of the trader's base token\n @return positionNotional Taker's position notional settled with closed price\n @return openNotional Taker's open notional\n @return realizedPnl Settled realized pnl\n @return closedPrice The closed price of the closed market"
            },
            "functionSelector": "5f9d05ad",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "settlePositionInClosedMarket",
            "nameLocation": "4564:28:18",
            "parameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "4601:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 960,
                  "src": "4593:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4593:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "4617:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 960,
                  "src": "4609:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4609:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4592:35:18"
            },
            "returnParameters": {
              "id": 959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 952,
                  "mutability": "mutable",
                  "name": "positionNotional",
                  "nameLocation": "4682:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 960,
                  "src": "4675:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 951,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4675:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 954,
                  "mutability": "mutable",
                  "name": "openNotional",
                  "nameLocation": "4719:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 960,
                  "src": "4712:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4712:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 956,
                  "mutability": "mutable",
                  "name": "realizedPnl",
                  "nameLocation": "4752:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 960,
                  "src": "4745:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4745:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 958,
                  "mutability": "mutable",
                  "name": "closedPrice",
                  "nameLocation": "4785:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 960,
                  "src": "4777:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4777:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4661:145:18"
            },
            "scope": 1125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 966,
            "nodeType": "FunctionDefinition",
            "src": "4934:110:18",
            "nodes": [],
            "documentation": {
              "id": 961,
              "nodeType": "StructuredDocumentation",
              "src": "4813:116:18",
              "text": "@notice Get `ClearingHouseConfig` address\n @return clearingHouseConfig The address of ClearingHouseConfig"
            },
            "functionSelector": "aa2a8294",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getClearingHouseConfig",
            "nameLocation": "4943:22:18",
            "parameters": {
              "id": 962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4965:2:18"
            },
            "returnParameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 964,
                  "mutability": "mutable",
                  "name": "clearingHouseConfig",
                  "nameLocation": "5023:19:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "5015:27:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5015:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5014:29:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 972,
            "nodeType": "FunctionDefinition",
            "src": "5141:66:18",
            "nodes": [],
            "documentation": {
              "id": 967,
              "nodeType": "StructuredDocumentation",
              "src": "5050:86:18",
              "text": "@notice Get `OrderBook` address\n @return orderBook The address of OrderBook"
            },
            "functionSelector": "b248c4ef",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderBook",
            "nameLocation": "5150:12:18",
            "parameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5162:2:18"
            },
            "returnParameters": {
              "id": 971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 970,
                  "mutability": "mutable",
                  "name": "orderBook",
                  "nameLocation": "5196:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 972,
                  "src": "5188:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5188:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5187:19:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 978,
            "nodeType": "FunctionDefinition",
            "src": "5292:58:18",
            "nodes": [],
            "documentation": {
              "id": 973,
              "nodeType": "StructuredDocumentation",
              "src": "5213:74:18",
              "text": "@notice Get `Vault` address\n @return vault The address of Vault"
            },
            "functionSelector": "8d928af8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getVault",
            "nameLocation": "5301:8:18",
            "parameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5309:2:18"
            },
            "returnParameters": {
              "id": 977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 976,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "5343:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 978,
                  "src": "5335:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5335:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5334:15:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 987,
            "nodeType": "FunctionDefinition",
            "src": "5507:115:18",
            "nodes": [],
            "documentation": {
              "id": 979,
              "nodeType": "StructuredDocumentation",
              "src": "5356:146:18",
              "text": "@notice Get trader registered baseTokens\n @param trader The address of trader\n @return baseTokens The array of baseToken address"
            },
            "functionSelector": "af74e736",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getBaseTokens",
            "nameLocation": "5516:13:18",
            "parameters": {
              "id": 982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 981,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "5538:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 987,
                  "src": "5530:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5530:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5529:16:18"
            },
            "returnParameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "mutability": "mutable",
                  "name": "baseTokens",
                  "nameLocation": "5610:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 987,
                  "src": "5593:27:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 983,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5593:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 984,
                    "nodeType": "ArrayTypeName",
                    "src": "5593:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5592:29:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 998,
            "nodeType": "FunctionDefinition",
            "src": "5833:151:18",
            "nodes": [],
            "documentation": {
              "id": 988,
              "nodeType": "StructuredDocumentation",
              "src": "5628:200:18",
              "text": "@notice Get trader account info\n @param trader The address of trader\n @param baseToken The address of baseToken\n @return traderAccountInfo The baseToken account info of trader"
            },
            "functionSelector": "6332fef6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountInfo",
            "nameLocation": "5842:14:18",
            "parameters": {
              "id": 993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 990,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "5865:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "5857:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5857:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 992,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "5881:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "5873:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5873:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5856:35:18"
            },
            "returnParameters": {
              "id": 997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 996,
                  "mutability": "mutable",
                  "name": "traderAccountInfo",
                  "nameLocation": "5965:17:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "5939:43:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$847_memory_ptr",
                    "typeString": "struct AccountMarket.Info"
                  },
                  "typeName": {
                    "id": 995,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 994,
                      "name": "AccountMarket.Info",
                      "nameLocations": [
                        "5939:13:18",
                        "5953:4:18"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 847,
                      "src": "5939:18:18"
                    },
                    "referencedDeclaration": 847,
                    "src": "5939:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$847_storage_ptr",
                      "typeString": "struct AccountMarket.Info"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5938:45:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1008,
            "nodeType": "FunctionDefinition",
            "src": "6203:133:18",
            "nodes": [],
            "documentation": {
              "id": 999,
              "nodeType": "StructuredDocumentation",
              "src": "5990:208:18",
              "text": "@notice Get taker cost of trader's baseToken\n @param trader The address of trader\n @param baseToken The address of baseToken\n @return openNotional The taker cost of trader's baseToken"
            },
            "functionSelector": "d50d01b7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTakerOpenNotional",
            "nameLocation": "6212:20:18",
            "parameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1001,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "6241:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1008,
                  "src": "6233:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6233:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1003,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "6257:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1008,
                  "src": "6249:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6249:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6232:35:18"
            },
            "returnParameters": {
              "id": 1007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1006,
                  "mutability": "mutable",
                  "name": "openNotional",
                  "nameLocation": "6322:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1008,
                  "src": "6315:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1005,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6315:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6314:21:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1018,
            "nodeType": "FunctionDefinition",
            "src": "6582:138:18",
            "nodes": [],
            "documentation": {
              "id": 1009,
              "nodeType": "StructuredDocumentation",
              "src": "6342:235:18",
              "text": "@notice Get total cost of trader's baseToken\n @param trader The address of trader\n @param baseToken The address of baseToken\n @return totalOpenNotional the amount of quote token paid for a position when opening"
            },
            "functionSelector": "b3945690",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalOpenNotional",
            "nameLocation": "6591:20:18",
            "parameters": {
              "id": 1014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1011,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "6620:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "6612:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6612:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1013,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "6636:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "6628:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6628:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6611:35:18"
            },
            "returnParameters": {
              "id": 1017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1016,
                  "mutability": "mutable",
                  "name": "totalOpenNotional",
                  "nameLocation": "6701:17:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "6694:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6694:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6693:26:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1026,
            "nodeType": "FunctionDefinition",
            "src": "6946:114:18",
            "nodes": [],
            "documentation": {
              "id": 1019,
              "nodeType": "StructuredDocumentation",
              "src": "6726:215:18",
              "text": "@notice Get total debt value of trader\n @param trader The address of trader\n @dev Total debt value will relate to `Vault.getFreeCollateral()`\n @return totalDebtValue The debt value of trader"
            },
            "functionSelector": "293a5077",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalDebtValue",
            "nameLocation": "6955:17:18",
            "parameters": {
              "id": 1022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1021,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "6981:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "6973:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6973:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6972:16:18"
            },
            "returnParameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1024,
                  "mutability": "mutable",
                  "name": "totalDebtValue",
                  "nameLocation": "7044:14:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "7036:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7036:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7035:24:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1034,
            "nodeType": "FunctionDefinition",
            "src": "7434:147:18",
            "nodes": [],
            "documentation": {
              "id": 1027,
              "nodeType": "StructuredDocumentation",
              "src": "7066:363:18",
              "text": "@notice Get margin requirement to check whether trader will be able to liquidate\n @dev This is different from `Vault._getTotalMarginRequirement()`, which is for freeCollateral calculation\n @param trader The address of trader\n @return marginRequirementForLiquidation It is compared with `ClearingHouse.getAccountValue` which is also an int"
            },
            "functionSelector": "f75c266d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMarginRequirementForLiquidation",
            "nameLocation": "7443:34:18",
            "parameters": {
              "id": 1030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "7486:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1034,
                  "src": "7478:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7478:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7477:16:18"
            },
            "returnParameters": {
              "id": 1033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1032,
                  "mutability": "mutable",
                  "name": "marginRequirementForLiquidation",
                  "nameLocation": "7548:31:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1034,
                  "src": "7541:38:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1031,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7541:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7540:40:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1046,
            "nodeType": "FunctionDefinition",
            "src": "7910:204:18",
            "nodes": [],
            "documentation": {
              "id": 1035,
              "nodeType": "StructuredDocumentation",
              "src": "7587:318:18",
              "text": "@notice Get owedRealizedPnl, unrealizedPnl and pending fee\n @param trader The address of trader\n @return owedRealizedPnl the pnl realized already but stored temporarily in AccountBalance\n @return unrealizedPnl the pnl not yet realized\n @return pendingFee the pending fee of maker earned"
            },
            "functionSelector": "bba85bcf",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPnlAndPendingFee",
            "nameLocation": "7919:19:18",
            "parameters": {
              "id": 1038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1037,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "7947:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "7939:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7939:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7938:16:18"
            },
            "returnParameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1040,
                  "mutability": "mutable",
                  "name": "owedRealizedPnl",
                  "nameLocation": "8022:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "8015:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1039,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8015:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1042,
                  "mutability": "mutable",
                  "name": "unrealizedPnl",
                  "nameLocation": "8058:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "8051:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1041,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8051:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1044,
                  "mutability": "mutable",
                  "name": "pendingFee",
                  "nameLocation": "8093:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "8085:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8085:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8001:112:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1054,
            "nodeType": "FunctionDefinition",
            "src": "8270:72:18",
            "nodes": [],
            "documentation": {
              "id": 1047,
              "nodeType": "StructuredDocumentation",
              "src": "8120:145:18",
              "text": "@notice Check trader has open order in open/closed market.\n @param trader The address of trader\n @return hasOrder True of false"
            },
            "functionSelector": "cb3c7b8e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hasOrder",
            "nameLocation": "8279:8:18",
            "parameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1049,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "8296:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "8288:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8288:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8287:16:18"
            },
            "returnParameters": {
              "id": 1053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1052,
                  "mutability": "mutable",
                  "name": "hasOrder",
                  "nameLocation": "8332:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "8327:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1051,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8327:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8326:15:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1064,
            "nodeType": "FunctionDefinition",
            "src": "8616:118:18",
            "nodes": [],
            "documentation": {
              "id": 1055,
              "nodeType": "StructuredDocumentation",
              "src": "8348:263:18",
              "text": "@notice Get trader base amount\n @dev `base amount = takerPositionSize - orderBaseDebt`\n @param trader The address of trader\n @param baseToken The address of baseToken\n @return baseAmount The base amount of trader's baseToken market"
            },
            "functionSelector": "b3bd6e12",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getBase",
            "nameLocation": "8625:7:18",
            "parameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1057,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "8641:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "8633:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1056,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8633:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1059,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "8657:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "8649:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8649:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8632:35:18"
            },
            "returnParameters": {
              "id": 1063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1062,
                  "mutability": "mutable",
                  "name": "baseAmount",
                  "nameLocation": "8722:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "8715:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1061,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8715:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8714:19:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1074,
            "nodeType": "FunctionDefinition",
            "src": "9013:120:18",
            "nodes": [],
            "documentation": {
              "id": 1065,
              "nodeType": "StructuredDocumentation",
              "src": "8740:268:18",
              "text": "@notice Get trader quote amount\n @dev `quote amount = takerOpenNotional - orderQuoteDebt`\n @param trader The address of trader\n @param baseToken The address of baseToken\n @return quoteAmount The quote amount of trader's baseToken market"
            },
            "functionSelector": "7a5b45a0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getQuote",
            "nameLocation": "9022:8:18",
            "parameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "9039:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "9031:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9031:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1069,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "9055:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "9047:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9047:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9030:35:18"
            },
            "returnParameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "quoteAmount",
                  "nameLocation": "9120:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "9113:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9113:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9112:20:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1084,
            "nodeType": "FunctionDefinition",
            "src": "9503:138:18",
            "nodes": [],
            "documentation": {
              "id": 1075,
              "nodeType": "StructuredDocumentation",
              "src": "9139:359:18",
              "text": "@notice Get taker position size of trader's baseToken market\n @dev This will only has taker position, can get maker impermanent position through `getTotalPositionSize`\n @param trader The address of trader\n @param baseToken The address of baseToken\n @return takerPositionSize The taker position size of trader's baseToken market"
            },
            "functionSelector": "b2e27148",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTakerPositionSize",
            "nameLocation": "9512:20:18",
            "parameters": {
              "id": 1080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1077,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "9541:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1084,
                  "src": "9533:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9533:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1079,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "9557:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1084,
                  "src": "9549:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9549:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9532:35:18"
            },
            "returnParameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1082,
                  "mutability": "mutable",
                  "name": "takerPositionSize",
                  "nameLocation": "9622:17:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1084,
                  "src": "9615:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1081,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9615:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9614:26:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1094,
            "nodeType": "FunctionDefinition",
            "src": "9988:138:18",
            "nodes": [],
            "documentation": {
              "id": 1085,
              "nodeType": "StructuredDocumentation",
              "src": "9647:336:18",
              "text": "@notice Get total position size of trader's baseToken market\n @dev `total position size = taker position size + maker impermanent position size`\n @param trader The address of trader\n @param baseToken The address of baseToken\n @return totalPositionSize The total position size of trader's baseToken market"
            },
            "functionSelector": "68f12e12",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalPositionSize",
            "nameLocation": "9997:20:18",
            "parameters": {
              "id": 1090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "10026:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1094,
                  "src": "10018:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10018:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1089,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "10042:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1094,
                  "src": "10034:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1088,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10034:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10017:35:18"
            },
            "returnParameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1092,
                  "mutability": "mutable",
                  "name": "totalPositionSize",
                  "nameLocation": "10107:17:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1094,
                  "src": "10100:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1091,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10100:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10099:26:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1104,
            "nodeType": "FunctionDefinition",
            "src": "10516:140:18",
            "nodes": [],
            "documentation": {
              "id": 1095,
              "nodeType": "StructuredDocumentation",
              "src": "10132:379:18",
              "text": "@notice Get total position value of trader's baseToken market\n @dev A negative returned value is only be used when calculating pnl,\n @dev we use `15 mins` twap to calc position value\n @param trader The address of trader\n @param baseToken The address of baseToken\n @return totalPositionValue Total position value of trader's baseToken market"
            },
            "functionSelector": "3f935107",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalPositionValue",
            "nameLocation": "10525:21:18",
            "parameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1097,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "10555:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1104,
                  "src": "10547:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10547:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1099,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "10571:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1104,
                  "src": "10563:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10563:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10546:35:18"
            },
            "returnParameters": {
              "id": 1103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1102,
                  "mutability": "mutable",
                  "name": "totalPositionValue",
                  "nameLocation": "10636:18:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1104,
                  "src": "10629:25:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1101,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10629:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10628:27:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1112,
            "nodeType": "FunctionDefinition",
            "src": "10843:128:18",
            "nodes": [],
            "documentation": {
              "id": 1105,
              "nodeType": "StructuredDocumentation",
              "src": "10662:176:18",
              "text": "@notice Get all market position abs value of trader\n @param trader The address of trader\n @return totalAbsPositionValue Sum up positions value of every market"
            },
            "functionSelector": "6ccdc82e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalAbsPositionValue",
            "nameLocation": "10852:24:18",
            "parameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1107,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "10885:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1112,
                  "src": "10877:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10877:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10876:16:18"
            },
            "returnParameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1110,
                  "mutability": "mutable",
                  "name": "totalAbsPositionValue",
                  "nameLocation": "10948:21:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1112,
                  "src": "10940:29:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10940:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10939:31:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1124,
            "nodeType": "FunctionDefinition",
            "src": "11304:154:18",
            "nodes": [],
            "documentation": {
              "id": 1113,
              "nodeType": "StructuredDocumentation",
              "src": "10977:322:18",
              "text": "@notice Get liquidatable position size of trader's baseToken market\n @param trader The address of trader\n @param baseToken The address of baseToken\n @param accountValue The account value of trader\n @return liquidatablePositionSize The liquidatable position size of trader's baseToken market"
            },
            "functionSelector": "10485bec",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLiquidatablePositionSize",
            "nameLocation": "11313:27:18",
            "parameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1115,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "11358:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "11350:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11350:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1117,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "11382:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "11374:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11374:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1119,
                  "mutability": "mutable",
                  "name": "accountValue",
                  "nameLocation": "11408:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "11401:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11401:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11340:86:18"
            },
            "returnParameters": {
              "id": 1123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "11450:6:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11450:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11449:8:18"
            },
            "scope": 1125,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IAccountBalance",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          1125
        ],
        "name": "IAccountBalance",
        "nameLocation": "355:15:18",
        "scope": 1126,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 18
}