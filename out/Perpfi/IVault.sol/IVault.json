{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "clearingHouse",
          "type": "address"
        }
      ],
      "name": "ClearingHouseChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "repaidSettlementWithoutInsuranceFundFeeX10_S",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "insuranceFundFeeX10_S",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "discountRatio",
          "type": "uint24"
        }
      ],
      "name": "CollateralLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "collateralManager",
          "type": "address"
        }
      ],
      "name": "CollateralManagerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "name": "TrustedForwarderChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "WETH9",
          "type": "address"
        }
      ],
      "name": "WETH9Changed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "depositEtherFor",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAccountBalance",
      "outputs": [
        {
          "internalType": "address",
          "name": "accountBalance",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "getAccountValue",
      "outputs": [
        {
          "internalType": "int256",
          "name": "accountValueX10_S",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "int256",
          "name": "balance",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getBalanceByToken",
      "outputs": [
        {
          "internalType": "int256",
          "name": "balance",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getClearingHouse",
      "outputs": [
        {
          "internalType": "address",
          "name": "clearingHouse",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getClearingHouseConfig",
      "outputs": [
        {
          "internalType": "address",
          "name": "clearingHouseConfig",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "clearingHouse",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralMmRatio",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "collateralMmRatio",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "getCollateralTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "collateralTokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExchange",
      "outputs": [
        {
          "internalType": "address",
          "name": "exchange",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "getFreeCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "freeCollateral",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "ratio",
          "type": "uint24"
        }
      ],
      "name": "getFreeCollateralByRatio",
      "outputs": [
        {
          "internalType": "int256",
          "name": "freeCollateralByRatio",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getFreeCollateralByToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "freeCollateral",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInsuranceFund",
      "outputs": [
        {
          "internalType": "address",
          "name": "insuranceFund",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "settlementX10_S",
          "type": "uint256"
        }
      ],
      "name": "getLiquidatableCollateralBySettlement",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "getMarginRequirementForCollateralLiquidation",
      "outputs": [
        {
          "internalType": "int256",
          "name": "marginRequirement",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getMaxRepaidSettlementAndLiquidatableCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "maxRepaidSettlementX10_S",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxLiquidatableCollateral",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        }
      ],
      "name": "getRepaidSettlementByCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "settlementX10_S",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSettlementToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "settlementToken",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "getSettlementTokenValue",
      "outputs": [
        {
          "internalType": "int256",
          "name": "balance",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "debtAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "clearingHouse",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "isLiquidatable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isLiquidatable",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isDenominatedInSettlementToken",
          "type": "bool"
        }
      ],
      "name": "liquidateCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "returnAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdrawAll",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAllEther",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "decimals()": "313ce567",
    "deposit(address,uint256)": "47e7ef24",
    "depositEther()": "98ea5fca",
    "depositEtherFor(address)": "4faa8a26",
    "depositFor(address,address,uint256)": "b3db428b",
    "getAccountBalance()": "6896fabf",
    "getAccountValue(address)": "5ae80951",
    "getBalance(address)": "f8b2cb4f",
    "getBalanceByToken(address,address)": "2e40a51b",
    "getClearingHouse()": "c575ff79",
    "getClearingHouseConfig()": "aa2a8294",
    "getCollateralManager()": "dfa441be",
    "getCollateralMmRatio()": "ac4531bd",
    "getCollateralTokens(address)": "ed903f7a",
    "getExchange()": "f807cd22",
    "getFreeCollateral(address)": "c3999444",
    "getFreeCollateralByRatio(address,uint24)": "3ffd1303",
    "getFreeCollateralByToken(address,address)": "12ca1d17",
    "getInsuranceFund()": "158626f7",
    "getLiquidatableCollateralBySettlement(address,uint256)": "b800a6b3",
    "getMarginRequirementForCollateralLiquidation(address)": "71b6a5bb",
    "getMaxRepaidSettlementAndLiquidatableCollateral(address,address)": "a9b786b2",
    "getRepaidSettlementByCollateral(address,uint256)": "c0e695b8",
    "getSettlementToken()": "12803c7d",
    "getSettlementTokenValue(address)": "c3b66b31",
    "getTotalDebt()": "34ce998a",
    "getWETH9()": "d9fd870b",
    "isLiquidatable(address)": "042e02cf",
    "liquidateCollateral(address,address,uint256,bool)": "08511abb",
    "withdraw(address,uint256)": "f3fef3a3",
    "withdrawAll(address)": "fa09e630",
    "withdrawAllEther()": "31c91117",
    "withdrawEther(uint256)": "3bed33ce"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"clearingHouse\",\"type\":\"address\"}],\"name\":\"ClearingHouseChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repaidSettlementWithoutInsuranceFundFeeX10_S\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"insuranceFundFeeX10_S\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"discountRatio\",\"type\":\"uint24\"}],\"name\":\"CollateralLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralManager\",\"type\":\"address\"}],\"name\":\"CollateralManagerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"name\":\"TrustedForwarderChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"WETH9\",\"type\":\"address\"}],\"name\":\"WETH9Changed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"depositEtherFor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAccountBalance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"accountBalance\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"getAccountValue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"accountValueX10_S\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"balance\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalanceByToken\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"balance\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClearingHouse\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"clearingHouse\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClearingHouseConfig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"clearingHouseConfig\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollateralManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"clearingHouse\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollateralMmRatio\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"collateralMmRatio\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"getCollateralTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"collateralTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"exchange\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"getFreeCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"freeCollateral\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"ratio\",\"type\":\"uint24\"}],\"name\":\"getFreeCollateralByRatio\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"freeCollateralByRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getFreeCollateralByToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"freeCollateral\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInsuranceFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"insuranceFund\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"settlementX10_S\",\"type\":\"uint256\"}],\"name\":\"getLiquidatableCollateralBySettlement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"getMarginRequirementForCollateralLiquidation\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"marginRequirement\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getMaxRepaidSettlementAndLiquidatableCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxRepaidSettlementX10_S\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidatableCollateral\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"getRepaidSettlementByCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"settlementX10_S\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSettlementToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"settlementToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"getSettlementTokenValue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"balance\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"debtAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"clearingHouse\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"isLiquidatable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isLiquidatable\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isDenominatedInSettlementToken\",\"type\":\"bool\"}],\"name\":\"liquidateCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"returnAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawAll\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllEther\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ClearingHouseChanged(address)\":{\"params\":{\"clearingHouse\":\"The address of clearingHouse\"}},\"CollateralLiquidated(address,address,address,uint256,uint256,uint256,uint24)\":{\"params\":{\"collateral\":\"The amount of collateral token liquidated\",\"collateralToken\":\"The address of the token that is liquidated\",\"discountRatio\":\"The discount ratio of liquidation price\",\"insuranceFundFeeX10_S\":\"The amount of insurance fund fee paid(in settlement token's decimals)\",\"liquidator\":\"The address of liquidator\",\"repaidSettlementWithoutInsuranceFundFeeX10_S\":\"The amount of settlement token repaid        for trader (in settlement token's decimals)\",\"trader\":\"The address of trader\"}},\"CollateralManagerChanged(address)\":{\"params\":{\"collateralManager\":\"The address of collateralManager\"}},\"Deposited(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token deposited\",\"collateralToken\":\"The address of token deposited\",\"trader\":\"The address of trader\"}},\"TrustedForwarderChanged(address)\":{\"details\":\"trustedForwarder is only used for metaTx\",\"params\":{\"trustedForwarder\":\"The address of trustedForwarder\"}},\"WETH9Changed(address)\":{\"params\":{\"WETH9\":\"The address of WETH9\"}},\"Withdrawn(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token withdrawn\",\"collateralToken\":\"The address of token withdrawn\",\"trader\":\"The address of trader\"}}},\"kind\":\"dev\",\"methods\":{\"decimals()\":{\"details\":\"cached the settlement token's decimal for gas optimization\",\"returns\":{\"decimals\":\"The decimals of settlement token\"}},\"deposit(address,uint256)\":{\"params\":{\"amount\":\"The amount of the token to deposit\",\"token\":\"The address of the token to deposit\"}},\"depositEtherFor(address)\":{\"params\":{\"to\":\"The address of the account to deposit to\"}},\"depositFor(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the token to deposit\",\"to\":\"The address of the account to deposit to\",\"token\":\"The address of collateral token\"}},\"getAccountBalance()\":{\"returns\":{\"accountBalance\":\"The address of `AccountBalance` contract\"}},\"getAccountValue(address)\":{\"params\":{\"trader\":\"The address of the trader\"},\"returns\":{\"accountValueX10_S\":\"account value (in settlement token's decimals)\"}},\"getBalance(address)\":{\"details\":\"The function is equivalent to `getBalanceByToken(trader, settlementToken)`      We keep this function solely for backward-compatibility with the older single-collateral system.      In practical applications, the developer might want to use `getSettlementTokenValue()` instead      because the latter includes pending fee, funding payment etc.      and therefore more accurately reflects a trader's settlement (ex. USDC) balance\",\"returns\":{\"balance\":\"The balance amount (in settlement token's decimals)\"}},\"getBalanceByToken(address,address)\":{\"params\":{\"token\":\"The address of the collateral token\",\"trader\":\"The address of the trader\"},\"returns\":{\"balance\":\"The balance amount (in its native decimals)\"}},\"getClearingHouse()\":{\"returns\":{\"clearingHouse\":\"The address of `ClearingHouse` contract\"}},\"getClearingHouseConfig()\":{\"returns\":{\"clearingHouseConfig\":\"The address of `ClearingHouseConfig` contract\"}},\"getCollateralManager()\":{\"returns\":{\"clearingHouse\":\"The address of `CollateralManager` contract\"}},\"getCollateralMmRatio()\":{\"returns\":{\"collateralMmRatio\":\"The maintenance margin ratio for collateral liquidation\"}},\"getCollateralTokens(address)\":{\"returns\":{\"collateralTokens\":\"array of collateral token addresses\"}},\"getExchange()\":{\"returns\":{\"exchange\":\"The address of `Exchange` contract\"}},\"getFreeCollateral(address)\":{\"params\":{\"trader\":\"The address of the trader\"},\"returns\":{\"freeCollateral\":\"the value (in settlement token's decimals) of free collateral available         for withdraw or opening new positions or orders)\"}},\"getFreeCollateralByRatio(address,uint24)\":{\"details\":\"There are three configurations for different insolvency risk tolerances:      **conservative, moderate &aggressive**. We will start with the **conservative** one      and gradually move to **aggressive** to increase capital efficiency\",\"params\":{\"ratio\":\"The margin requirement ratio, imRatio or mmRatio\",\"trader\":\"The address of the trader\"},\"returns\":{\"freeCollateralByRatio\":\"freeCollateral (in settlement token's decimals), by using the         input margin requirement ratio; can be negative\"}},\"getFreeCollateralByToken(address,address)\":{\"params\":{\"token\":\"The address of the collateral token\",\"trader\":\"The address of the trader\"},\"returns\":{\"freeCollateral\":\"amount of that token (in the token's native decimals)\"}},\"getInsuranceFund()\":{\"returns\":{\"insuranceFund\":\"The address of `InsuranceFund` contract\"}},\"getLiquidatableCollateralBySettlement(address,uint256)\":{\"params\":{\"settlementX10_S\":\"The amount of settlement token the liquidator wants to pay\",\"token\":\"The address of the token of the trader's collateral\"},\"returns\":{\"collateral\":\"The collateral amount(in its native decimals) the liquidator can get\"}},\"getMarginRequirementForCollateralLiquidation(address)\":{\"details\":\"this value is compared with `ClearingHouse.getAccountValue()` (int)\",\"params\":{\"trader\":\"The address of the trader\"},\"returns\":{\"marginRequirement\":\"margin requirement (in 18 decimals)\"}},\"getMaxRepaidSettlementAndLiquidatableCollateral(address,address)\":{\"params\":{\"token\":\"The address of the token of the trader's collateral\",\"trader\":\"The address of the trader\"},\"returns\":{\"maxLiquidatableCollateral\":\"The maximum liquidatable collateral amount         (in the collateral token's native decimals) of a trader\",\"maxRepaidSettlementX10_S\":\"The maximum settlement amount(in settlement token's decimals)         the liquidator needs to pay to liquidate a trader's collateral token\"}},\"getRepaidSettlementByCollateral(address,uint256)\":{\"params\":{\"collateral\":\"The amount of collateral token the liquidator wants to get\",\"token\":\"The address of the token of the trader's collateral\"},\"returns\":{\"settlementX10_S\":\"The settlement amount(in settlement token's decimals) the liquidator needs to pay\"}},\"getSettlementToken()\":{\"details\":\"We assume the settlement token should match the denominator of the price oracle.      i.e. if the settlement token is USDC, then the oracle should be priced in USD\",\"returns\":{\"settlementToken\":\"The address of the settlement token\"}},\"getSettlementTokenValue(address)\":{\"details\":\"Note the difference between `settlementTokenBalanceX10_S`, `getSettlementTokenValue()` and `getBalance()`:      They are all settlement token balances but with or without      pending fee, funding payment, owed realized PnL, unrealized PnL, respectively      In practical applications, we use `getSettlementTokenValue()` to get the trader's debt (if < 0)\",\"params\":{\"trader\":\"The address of the trader\"},\"returns\":{\"balance\":\"The balance amount (in settlement token's decimals)\"}},\"getTotalDebt()\":{\"returns\":{\"debtAmount\":\"The debt amount (in settlement token's decimals)\"}},\"getWETH9()\":{\"returns\":{\"clearingHouse\":\"The address of `WETH9` contract\"}},\"isLiquidatable(address)\":{\"params\":{\"trader\":\"The address of the trader\"},\"returns\":{\"isLiquidatable\":\"If the trader can be liquidated\"}},\"liquidateCollateral(address,address,uint256,bool)\":{\"params\":{\"amount\":\"The amount of settlement token that the liquidator will repay for trader or               the amount of non-settlement collateral token that the liquidator will charge from trader\",\"isDenominatedInSettlementToken\":\"Whether the amount is denominated in settlement token or not\",\"token\":\"The address of non settlement collateral token that the trader will be liquidated\",\"trader\":\"The address of trader that will be liquidated\"},\"returns\":{\"returnAmount\":\"The amount of a non-settlement token (in its native decimals) that is liquidated         when `isDenominatedInSettlementToken` is true or the amount of settlement token that is repaid         when `isDenominatedInSettlementToken` is false\"}},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"The amount of the token to withdraw\",\"token\":\"The address of the token to withdraw\"}},\"withdrawAll(address)\":{\"params\":{\"token\":\"The address of the token to withdraw\"},\"returns\":{\"amount\":\"The amount of the token withdrawn\"}},\"withdrawAllEther()\":{\"returns\":{\"amount\":\"The amount of ETH withdrawn\"}},\"withdrawEther(uint256)\":{\"params\":{\"amount\":\"The amount of the ETH to withdraw\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClearingHouseChanged(address)\":{\"notice\":\"Emitted when clearingHouse is changed\"},\"CollateralLiquidated(address,address,address,uint256,uint256,uint256,uint24)\":{\"notice\":\"Emitted when a trader's collateral is liquidated\"},\"CollateralManagerChanged(address)\":{\"notice\":\"Emitted when collateralManager is changed\"},\"Deposited(address,address,uint256)\":{\"notice\":\"Emitted when trader deposit collateral into vault\"},\"TrustedForwarderChanged(address)\":{\"notice\":\"Emitted when trustedForwarder is changed\"},\"WETH9Changed(address)\":{\"notice\":\"Emitted when WETH9 is changed\"},\"Withdrawn(address,address,uint256)\":{\"notice\":\"Emitted when trader withdraw collateral from vault\"}},\"kind\":\"user\",\"methods\":{\"decimals()\":{\"notice\":\"Get settlement token decimals\"},\"deposit(address,uint256)\":{\"notice\":\"Deposit collateral into vault\"},\"depositEther()\":{\"notice\":\"Deposit ETH as collateral into vault\"},\"depositEtherFor(address)\":{\"notice\":\"Deposit ETH as collateral for specified account\"},\"depositFor(address,address,uint256)\":{\"notice\":\"Deposit the collateral token for other account\"},\"getAccountBalance()\":{\"notice\":\"Get `AccountBalance` contract address\"},\"getAccountValue(address)\":{\"notice\":\"Get account value of the specified trader\"},\"getBalance(address)\":{\"notice\":\"Get the specified trader's settlement token balance, without pending fee, funding payment         and owed realized PnL\"},\"getBalanceByToken(address,address)\":{\"notice\":\"Get the balance of Vault of the specified collateral token and trader\"},\"getClearingHouse()\":{\"notice\":\"Get `ClearingHouse` contract address\"},\"getClearingHouseConfig()\":{\"notice\":\"Get `ClearingHouseConfig` contract address\"},\"getCollateralManager()\":{\"notice\":\"Get `CollateralManager` contract address\"},\"getCollateralMmRatio()\":{\"notice\":\"Get the maintenance margin ratio for collateral liquidation\"},\"getCollateralTokens(address)\":{\"notice\":\"Get they array of collateral token addresses that a trader has\"},\"getExchange()\":{\"notice\":\"Get `Exchange` contract address\"},\"getFreeCollateral(address)\":{\"notice\":\"Get the free collateral value denominated in the settlement token of the specified trader\"},\"getFreeCollateralByRatio(address,uint24)\":{\"notice\":\"Get the free collateral amount of the specified trader and collateral ratio\"},\"getFreeCollateralByToken(address,address)\":{\"notice\":\"Get the free collateral amount of the specified collateral token of specified trader\"},\"getInsuranceFund()\":{\"notice\":\"Get `InsuranceFund` contract address\"},\"getLiquidatableCollateralBySettlement(address,uint256)\":{\"notice\":\"Get a trader's liquidatable collateral amount by a given settlement amount\"},\"getMarginRequirementForCollateralLiquidation(address)\":{\"notice\":\"get the margin requirement for collateral liquidation of a trader\"},\"getMaxRepaidSettlementAndLiquidatableCollateral(address,address)\":{\"notice\":\"Get a trader's max repaid settlement & max liquidatable collateral by a given collateral token\"},\"getRepaidSettlementByCollateral(address,uint256)\":{\"notice\":\"Get a trader's repaid settlement amount by a given collateral amount\"},\"getSettlementToken()\":{\"notice\":\"Get the settlement token address\"},\"getSettlementTokenValue(address)\":{\"notice\":\"Get the specified trader's settlement value, including pending fee, funding payment,         owed realized PnL and unrealized PnL\"},\"getTotalDebt()\":{\"notice\":\"Get the borrowed settlement token amount from insurance fund\"},\"getWETH9()\":{\"notice\":\"Get `WETH9` contract address\"},\"liquidateCollateral(address,address,uint256,bool)\":{\"notice\":\"Liquidate trader's collateral by given settlement token amount or non settlement token amount\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraw collateral from vault\"},\"withdrawAll(address)\":{\"notice\":\"Withdraw all free collateral from vault\"},\"withdrawAllEther()\":{\"notice\":\"Withdraw all free collateral of ETH from vault\"},\"withdrawEther(uint256)\":{\"notice\":\"Withdraw ETH from vault\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/Perpfi/IVault.sol\":\"IVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@perp/=node_modules/@perp/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/Interfaces/Perpfi/IVault.sol\":{\"keccak256\":\"0x0a1f804acb3ebce307b75e6d3e980ca06333abcc0fe9c21456000350134c07da\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b7974ee4a5f95efbddbc7f82535d94d0a8a38f8a7cccab70fe2e9afe2e132e32\",\"dweb:/ipfs/QmQ74opu8P7HpFnocop7b1ENdVcLG2emqXqtEXBEMzTUpm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "clearingHouse",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ClearingHouseChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "liquidator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "repaidSettlementWithoutInsuranceFundFeeX10_S",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "insuranceFundFeeX10_S",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint24",
              "name": "discountRatio",
              "type": "uint24",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CollateralLiquidated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "collateralManager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CollateralManagerChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trustedForwarder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TrustedForwarderChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "WETH9",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "WETH9Changed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdrawn",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositEther"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositEtherFor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositFor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountBalance",
          "outputs": [
            {
              "internalType": "address",
              "name": "accountBalance",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountValue",
          "outputs": [
            {
              "internalType": "int256",
              "name": "accountValueX10_S",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBalance",
          "outputs": [
            {
              "internalType": "int256",
              "name": "balance",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBalanceByToken",
          "outputs": [
            {
              "internalType": "int256",
              "name": "balance",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getClearingHouse",
          "outputs": [
            {
              "internalType": "address",
              "name": "clearingHouse",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getClearingHouseConfig",
          "outputs": [
            {
              "internalType": "address",
              "name": "clearingHouseConfig",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCollateralManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "clearingHouse",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCollateralMmRatio",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "collateralMmRatio",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCollateralTokens",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "collateralTokens",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getExchange",
          "outputs": [
            {
              "internalType": "address",
              "name": "exchange",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFreeCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "freeCollateral",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "ratio",
              "type": "uint24"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFreeCollateralByRatio",
          "outputs": [
            {
              "internalType": "int256",
              "name": "freeCollateralByRatio",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFreeCollateralByToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "freeCollateral",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getInsuranceFund",
          "outputs": [
            {
              "internalType": "address",
              "name": "insuranceFund",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "settlementX10_S",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLiquidatableCollateralBySettlement",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarginRequirementForCollateralLiquidation",
          "outputs": [
            {
              "internalType": "int256",
              "name": "marginRequirement",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxRepaidSettlementAndLiquidatableCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxRepaidSettlementX10_S",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLiquidatableCollateral",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRepaidSettlementByCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "settlementX10_S",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSettlementToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "settlementToken",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSettlementTokenValue",
          "outputs": [
            {
              "internalType": "int256",
              "name": "balance",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalDebt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "debtAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getWETH9",
          "outputs": [
            {
              "internalType": "address",
              "name": "clearingHouse",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLiquidatable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isLiquidatable",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isDenominatedInSettlementToken",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidateCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "returnAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAll",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawAllEther",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawEther"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "decimals()": {
            "details": "cached the settlement token's decimal for gas optimization",
            "returns": {
              "decimals": "The decimals of settlement token"
            }
          },
          "deposit(address,uint256)": {
            "params": {
              "amount": "The amount of the token to deposit",
              "token": "The address of the token to deposit"
            }
          },
          "depositEtherFor(address)": {
            "params": {
              "to": "The address of the account to deposit to"
            }
          },
          "depositFor(address,address,uint256)": {
            "params": {
              "amount": "The amount of the token to deposit",
              "to": "The address of the account to deposit to",
              "token": "The address of collateral token"
            }
          },
          "getAccountBalance()": {
            "returns": {
              "accountBalance": "The address of `AccountBalance` contract"
            }
          },
          "getAccountValue(address)": {
            "params": {
              "trader": "The address of the trader"
            },
            "returns": {
              "accountValueX10_S": "account value (in settlement token's decimals)"
            }
          },
          "getBalance(address)": {
            "details": "The function is equivalent to `getBalanceByToken(trader, settlementToken)`      We keep this function solely for backward-compatibility with the older single-collateral system.      In practical applications, the developer might want to use `getSettlementTokenValue()` instead      because the latter includes pending fee, funding payment etc.      and therefore more accurately reflects a trader's settlement (ex. USDC) balance",
            "returns": {
              "balance": "The balance amount (in settlement token's decimals)"
            }
          },
          "getBalanceByToken(address,address)": {
            "params": {
              "token": "The address of the collateral token",
              "trader": "The address of the trader"
            },
            "returns": {
              "balance": "The balance amount (in its native decimals)"
            }
          },
          "getClearingHouse()": {
            "returns": {
              "clearingHouse": "The address of `ClearingHouse` contract"
            }
          },
          "getClearingHouseConfig()": {
            "returns": {
              "clearingHouseConfig": "The address of `ClearingHouseConfig` contract"
            }
          },
          "getCollateralManager()": {
            "returns": {
              "clearingHouse": "The address of `CollateralManager` contract"
            }
          },
          "getCollateralMmRatio()": {
            "returns": {
              "collateralMmRatio": "The maintenance margin ratio for collateral liquidation"
            }
          },
          "getCollateralTokens(address)": {
            "returns": {
              "collateralTokens": "array of collateral token addresses"
            }
          },
          "getExchange()": {
            "returns": {
              "exchange": "The address of `Exchange` contract"
            }
          },
          "getFreeCollateral(address)": {
            "params": {
              "trader": "The address of the trader"
            },
            "returns": {
              "freeCollateral": "the value (in settlement token's decimals) of free collateral available         for withdraw or opening new positions or orders)"
            }
          },
          "getFreeCollateralByRatio(address,uint24)": {
            "details": "There are three configurations for different insolvency risk tolerances:      **conservative, moderate &aggressive**. We will start with the **conservative** one      and gradually move to **aggressive** to increase capital efficiency",
            "params": {
              "ratio": "The margin requirement ratio, imRatio or mmRatio",
              "trader": "The address of the trader"
            },
            "returns": {
              "freeCollateralByRatio": "freeCollateral (in settlement token's decimals), by using the         input margin requirement ratio; can be negative"
            }
          },
          "getFreeCollateralByToken(address,address)": {
            "params": {
              "token": "The address of the collateral token",
              "trader": "The address of the trader"
            },
            "returns": {
              "freeCollateral": "amount of that token (in the token's native decimals)"
            }
          },
          "getInsuranceFund()": {
            "returns": {
              "insuranceFund": "The address of `InsuranceFund` contract"
            }
          },
          "getLiquidatableCollateralBySettlement(address,uint256)": {
            "params": {
              "settlementX10_S": "The amount of settlement token the liquidator wants to pay",
              "token": "The address of the token of the trader's collateral"
            },
            "returns": {
              "collateral": "The collateral amount(in its native decimals) the liquidator can get"
            }
          },
          "getMarginRequirementForCollateralLiquidation(address)": {
            "details": "this value is compared with `ClearingHouse.getAccountValue()` (int)",
            "params": {
              "trader": "The address of the trader"
            },
            "returns": {
              "marginRequirement": "margin requirement (in 18 decimals)"
            }
          },
          "getMaxRepaidSettlementAndLiquidatableCollateral(address,address)": {
            "params": {
              "token": "The address of the token of the trader's collateral",
              "trader": "The address of the trader"
            },
            "returns": {
              "maxLiquidatableCollateral": "The maximum liquidatable collateral amount         (in the collateral token's native decimals) of a trader",
              "maxRepaidSettlementX10_S": "The maximum settlement amount(in settlement token's decimals)         the liquidator needs to pay to liquidate a trader's collateral token"
            }
          },
          "getRepaidSettlementByCollateral(address,uint256)": {
            "params": {
              "collateral": "The amount of collateral token the liquidator wants to get",
              "token": "The address of the token of the trader's collateral"
            },
            "returns": {
              "settlementX10_S": "The settlement amount(in settlement token's decimals) the liquidator needs to pay"
            }
          },
          "getSettlementToken()": {
            "details": "We assume the settlement token should match the denominator of the price oracle.      i.e. if the settlement token is USDC, then the oracle should be priced in USD",
            "returns": {
              "settlementToken": "The address of the settlement token"
            }
          },
          "getSettlementTokenValue(address)": {
            "details": "Note the difference between `settlementTokenBalanceX10_S`, `getSettlementTokenValue()` and `getBalance()`:      They are all settlement token balances but with or without      pending fee, funding payment, owed realized PnL, unrealized PnL, respectively      In practical applications, we use `getSettlementTokenValue()` to get the trader's debt (if < 0)",
            "params": {
              "trader": "The address of the trader"
            },
            "returns": {
              "balance": "The balance amount (in settlement token's decimals)"
            }
          },
          "getTotalDebt()": {
            "returns": {
              "debtAmount": "The debt amount (in settlement token's decimals)"
            }
          },
          "getWETH9()": {
            "returns": {
              "clearingHouse": "The address of `WETH9` contract"
            }
          },
          "isLiquidatable(address)": {
            "params": {
              "trader": "The address of the trader"
            },
            "returns": {
              "isLiquidatable": "If the trader can be liquidated"
            }
          },
          "liquidateCollateral(address,address,uint256,bool)": {
            "params": {
              "amount": "The amount of settlement token that the liquidator will repay for trader or               the amount of non-settlement collateral token that the liquidator will charge from trader",
              "isDenominatedInSettlementToken": "Whether the amount is denominated in settlement token or not",
              "token": "The address of non settlement collateral token that the trader will be liquidated",
              "trader": "The address of trader that will be liquidated"
            },
            "returns": {
              "returnAmount": "The amount of a non-settlement token (in its native decimals) that is liquidated         when `isDenominatedInSettlementToken` is true or the amount of settlement token that is repaid         when `isDenominatedInSettlementToken` is false"
            }
          },
          "withdraw(address,uint256)": {
            "params": {
              "amount": "The amount of the token to withdraw",
              "token": "The address of the token to withdraw"
            }
          },
          "withdrawAll(address)": {
            "params": {
              "token": "The address of the token to withdraw"
            },
            "returns": {
              "amount": "The amount of the token withdrawn"
            }
          },
          "withdrawAllEther()": {
            "returns": {
              "amount": "The amount of ETH withdrawn"
            }
          },
          "withdrawEther(uint256)": {
            "params": {
              "amount": "The amount of the ETH to withdraw"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "decimals()": {
            "notice": "Get settlement token decimals"
          },
          "deposit(address,uint256)": {
            "notice": "Deposit collateral into vault"
          },
          "depositEther()": {
            "notice": "Deposit ETH as collateral into vault"
          },
          "depositEtherFor(address)": {
            "notice": "Deposit ETH as collateral for specified account"
          },
          "depositFor(address,address,uint256)": {
            "notice": "Deposit the collateral token for other account"
          },
          "getAccountBalance()": {
            "notice": "Get `AccountBalance` contract address"
          },
          "getAccountValue(address)": {
            "notice": "Get account value of the specified trader"
          },
          "getBalance(address)": {
            "notice": "Get the specified trader's settlement token balance, without pending fee, funding payment         and owed realized PnL"
          },
          "getBalanceByToken(address,address)": {
            "notice": "Get the balance of Vault of the specified collateral token and trader"
          },
          "getClearingHouse()": {
            "notice": "Get `ClearingHouse` contract address"
          },
          "getClearingHouseConfig()": {
            "notice": "Get `ClearingHouseConfig` contract address"
          },
          "getCollateralManager()": {
            "notice": "Get `CollateralManager` contract address"
          },
          "getCollateralMmRatio()": {
            "notice": "Get the maintenance margin ratio for collateral liquidation"
          },
          "getCollateralTokens(address)": {
            "notice": "Get they array of collateral token addresses that a trader has"
          },
          "getExchange()": {
            "notice": "Get `Exchange` contract address"
          },
          "getFreeCollateral(address)": {
            "notice": "Get the free collateral value denominated in the settlement token of the specified trader"
          },
          "getFreeCollateralByRatio(address,uint24)": {
            "notice": "Get the free collateral amount of the specified trader and collateral ratio"
          },
          "getFreeCollateralByToken(address,address)": {
            "notice": "Get the free collateral amount of the specified collateral token of specified trader"
          },
          "getInsuranceFund()": {
            "notice": "Get `InsuranceFund` contract address"
          },
          "getLiquidatableCollateralBySettlement(address,uint256)": {
            "notice": "Get a trader's liquidatable collateral amount by a given settlement amount"
          },
          "getMarginRequirementForCollateralLiquidation(address)": {
            "notice": "get the margin requirement for collateral liquidation of a trader"
          },
          "getMaxRepaidSettlementAndLiquidatableCollateral(address,address)": {
            "notice": "Get a trader's max repaid settlement & max liquidatable collateral by a given collateral token"
          },
          "getRepaidSettlementByCollateral(address,uint256)": {
            "notice": "Get a trader's repaid settlement amount by a given collateral amount"
          },
          "getSettlementToken()": {
            "notice": "Get the settlement token address"
          },
          "getSettlementTokenValue(address)": {
            "notice": "Get the specified trader's settlement value, including pending fee, funding payment,         owed realized PnL and unrealized PnL"
          },
          "getTotalDebt()": {
            "notice": "Get the borrowed settlement token amount from insurance fund"
          },
          "getWETH9()": {
            "notice": "Get `WETH9` contract address"
          },
          "liquidateCollateral(address,address,uint256,bool)": {
            "notice": "Liquidate trader's collateral by given settlement token amount or non settlement token amount"
          },
          "withdraw(address,uint256)": {
            "notice": "Withdraw collateral from vault"
          },
          "withdrawAll(address)": {
            "notice": "Withdraw all free collateral from vault"
          },
          "withdrawAllEther()": {
            "notice": "Withdraw all free collateral of ETH from vault"
          },
          "withdrawEther(uint256)": {
            "notice": "Withdraw ETH from vault"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@perp/=node_modules/@perp/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Interfaces/Perpfi/IVault.sol": "IVault"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Interfaces/Perpfi/IVault.sol": {
        "keccak256": "0x0a1f804acb3ebce307b75e6d3e980ca06333abcc0fe9c21456000350134c07da",
        "urls": [
          "bzz-raw://b7974ee4a5f95efbddbc7f82535d94d0a8a38f8a7cccab70fe2e9afe2e132e32",
          "dweb:/ipfs/QmQ74opu8P7HpFnocop7b1ENdVcLG2emqXqtEXBEMzTUpm"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Interfaces/Perpfi/IVault.sol",
    "id": 2059,
    "exportedSymbols": {
      "IVault": [
        2058
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:14940:22",
    "nodes": [
      {
        "id": 1746,
        "nodeType": "PragmaDirective",
        "src": "45:24:22",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 1747,
        "nodeType": "PragmaDirective",
        "src": "70:19:22",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 2058,
        "nodeType": "ContractDefinition",
        "src": "91:14893:22",
        "nodes": [
          {
            "id": 1756,
            "nodeType": "EventDefinition",
            "src": "338:119:22",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 1748,
              "nodeType": "StructuredDocumentation",
              "src": "114:219:22",
              "text": "@notice Emitted when trader deposit collateral into vault\n @param collateralToken The address of token deposited\n @param trader The address of trader\n @param amount The amount of token deposited"
            },
            "eventSelector": "8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a7",
            "name": "Deposited",
            "nameLocation": "344:9:22",
            "parameters": {
              "id": 1755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1750,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "collateralToken",
                  "nameLocation": "379:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1756,
                  "src": "363:31:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1752,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "420:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1756,
                  "src": "404:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1751,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1754,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "444:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1756,
                  "src": "436:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "353:103:22"
            }
          },
          {
            "id": 1765,
            "nodeType": "EventDefinition",
            "src": "688:119:22",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 1757,
              "nodeType": "StructuredDocumentation",
              "src": "463:220:22",
              "text": "@notice Emitted when trader withdraw collateral from vault\n @param collateralToken The address of token withdrawn\n @param trader The address of trader\n @param amount The amount of token withdrawn"
            },
            "eventSelector": "d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb",
            "name": "Withdrawn",
            "nameLocation": "694:9:22",
            "parameters": {
              "id": 1764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1759,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "collateralToken",
                  "nameLocation": "729:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1765,
                  "src": "713:31:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "713:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1761,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "770:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1765,
                  "src": "754:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1763,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "794:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1765,
                  "src": "786:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "786:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "703:103:22"
            }
          },
          {
            "id": 1782,
            "nodeType": "EventDefinition",
            "src": "1450:301:22",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 1766,
              "nodeType": "StructuredDocumentation",
              "src": "813:632:22",
              "text": "@notice Emitted when a trader's collateral is liquidated\n @param trader The address of trader\n @param collateralToken The address of the token that is liquidated\n @param liquidator The address of liquidator\n @param collateral The amount of collateral token liquidated\n @param repaidSettlementWithoutInsuranceFundFeeX10_S The amount of settlement token repaid\n        for trader (in settlement token's decimals)\n @param insuranceFundFeeX10_S The amount of insurance fund fee paid(in settlement token's decimals)\n @param discountRatio The discount ratio of liquidation price"
            },
            "eventSelector": "bd3320c61b99a54ed3537dce8a75020f70b61d6dd124b6aa28738d1bab9bf77d",
            "name": "CollateralLiquidated",
            "nameLocation": "1456:20:22",
            "parameters": {
              "id": 1781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1768,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "1502:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1782,
                  "src": "1486:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1770,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "collateralToken",
                  "nameLocation": "1534:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1782,
                  "src": "1518:31:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1772,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "liquidator",
                  "nameLocation": "1575:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1782,
                  "src": "1559:26:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1774,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "collateral",
                  "nameLocation": "1603:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1782,
                  "src": "1595:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1595:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1776,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "repaidSettlementWithoutInsuranceFundFeeX10_S",
                  "nameLocation": "1631:44:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1782,
                  "src": "1623:52:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1623:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1778,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "insuranceFundFeeX10_S",
                  "nameLocation": "1693:21:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1782,
                  "src": "1685:29:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1780,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "discountRatio",
                  "nameLocation": "1731:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1782,
                  "src": "1724:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1779,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1724:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1476:274:22"
            }
          },
          {
            "id": 1787,
            "nodeType": "EventDefinition",
            "src": "1932:64:22",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 1783,
              "nodeType": "StructuredDocumentation",
              "src": "1757:170:22",
              "text": "@notice Emitted when trustedForwarder is changed\n @dev trustedForwarder is only used for metaTx\n @param trustedForwarder The address of trustedForwarder"
            },
            "eventSelector": "871264f4293af7d2865ae7eae628b228f4991c57cb45b39c99f0b774ebe29018",
            "name": "TrustedForwarderChanged",
            "nameLocation": "1938:23:22",
            "parameters": {
              "id": 1786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1785,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "trustedForwarder",
                  "nameLocation": "1978:16:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1787,
                  "src": "1962:32:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1961:34:22"
            }
          },
          {
            "id": 1792,
            "nodeType": "EventDefinition",
            "src": "2114:58:22",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 1788,
              "nodeType": "StructuredDocumentation",
              "src": "2002:107:22",
              "text": "@notice Emitted when clearingHouse is changed\n @param clearingHouse The address of clearingHouse"
            },
            "eventSelector": "d0654f5900f9e7e4e605a19334306e6a2786bbf960ac0484a4c12feb6428fe2f",
            "name": "ClearingHouseChanged",
            "nameLocation": "2120:20:22",
            "parameters": {
              "id": 1791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1790,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "clearingHouse",
                  "nameLocation": "2157:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1792,
                  "src": "2141:29:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2141:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2140:31:22"
            }
          },
          {
            "id": 1797,
            "nodeType": "EventDefinition",
            "src": "2302:66:22",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 1793,
              "nodeType": "StructuredDocumentation",
              "src": "2178:119:22",
              "text": "@notice Emitted when collateralManager is changed\n @param collateralManager The address of collateralManager"
            },
            "eventSelector": "7f1f6e997b7238fb3f4ee953b0630eda9d99527ae013f1e84bd916457e0a9dd4",
            "name": "CollateralManagerChanged",
            "nameLocation": "2308:24:22",
            "parameters": {
              "id": 1796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1795,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "collateralManager",
                  "nameLocation": "2349:17:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1797,
                  "src": "2333:33:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2333:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2332:35:22"
            }
          },
          {
            "id": 1802,
            "nodeType": "EventDefinition",
            "src": "2462:42:22",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 1798,
              "nodeType": "StructuredDocumentation",
              "src": "2374:83:22",
              "text": "@notice Emitted when WETH9 is changed\n @param WETH9 The address of WETH9"
            },
            "eventSelector": "058d4d3b4c34c38d2a57d5abcbfceff6b01f10883bb6a6033f394a98ffbc6ed1",
            "name": "WETH9Changed",
            "nameLocation": "2468:12:22",
            "parameters": {
              "id": 1801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1800,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "WETH9",
                  "nameLocation": "2497:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1802,
                  "src": "2481:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2480:23:22"
            }
          },
          {
            "id": 1810,
            "nodeType": "FunctionDefinition",
            "src": "2670:57:22",
            "nodes": [],
            "documentation": {
              "id": 1803,
              "nodeType": "StructuredDocumentation",
              "src": "2510:155:22",
              "text": "@notice Deposit collateral into vault\n @param token The address of the token to deposit\n @param amount The amount of the token to deposit"
            },
            "functionSelector": "47e7ef24",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2679:7:22",
            "parameters": {
              "id": 1808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1805,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2695:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1810,
                  "src": "2687:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2687:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1807,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2710:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1810,
                  "src": "2702:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2702:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2686:31:22"
            },
            "returnParameters": {
              "id": 1809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2726:0:22"
            },
            "scope": 2058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1820,
            "nodeType": "FunctionDefinition",
            "src": "2965:102:22",
            "nodes": [],
            "documentation": {
              "id": 1811,
              "nodeType": "StructuredDocumentation",
              "src": "2733:227:22",
              "text": "@notice Deposit the collateral token for other account\n @param to The address of the account to deposit to\n @param token The address of collateral token\n @param amount The amount of the token to deposit"
            },
            "functionSelector": "b3db428b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositFor",
            "nameLocation": "2974:10:22",
            "parameters": {
              "id": 1818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1813,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3002:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1820,
                  "src": "2994:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2994:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1815,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3022:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1820,
                  "src": "3014:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3014:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1817,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3045:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1820,
                  "src": "3037:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1816,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3037:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2984:73:22"
            },
            "returnParameters": {
              "id": 1819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3066:0:22"
            },
            "scope": 2058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1824,
            "nodeType": "FunctionDefinition",
            "src": "3126:41:22",
            "nodes": [],
            "documentation": {
              "id": 1821,
              "nodeType": "StructuredDocumentation",
              "src": "3073:48:22",
              "text": "@notice Deposit ETH as collateral into vault"
            },
            "functionSelector": "98ea5fca",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositEther",
            "nameLocation": "3135:12:22",
            "parameters": {
              "id": 1822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3147:2:22"
            },
            "returnParameters": {
              "id": 1823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3166:0:22"
            },
            "scope": 2058,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1830,
            "nodeType": "FunctionDefinition",
            "src": "3296:54:22",
            "nodes": [],
            "documentation": {
              "id": 1825,
              "nodeType": "StructuredDocumentation",
              "src": "3173:118:22",
              "text": "@notice Deposit ETH as collateral for specified account\n @param to The address of the account to deposit to"
            },
            "functionSelector": "4faa8a26",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositEtherFor",
            "nameLocation": "3305:15:22",
            "parameters": {
              "id": 1828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1827,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3329:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1830,
                  "src": "3321:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3321:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3320:12:22"
            },
            "returnParameters": {
              "id": 1829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3349:0:22"
            },
            "scope": 2058,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1838,
            "nodeType": "FunctionDefinition",
            "src": "3519:58:22",
            "nodes": [],
            "documentation": {
              "id": 1831,
              "nodeType": "StructuredDocumentation",
              "src": "3356:158:22",
              "text": "@notice Withdraw collateral from vault\n @param token The address of the token to withdraw\n @param amount The amount of the token to withdraw"
            },
            "functionSelector": "f3fef3a3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "3528:8:22",
            "parameters": {
              "id": 1836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1833,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3545:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1838,
                  "src": "3537:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3537:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1835,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3560:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1838,
                  "src": "3552:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3552:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3536:31:22"
            },
            "returnParameters": {
              "id": 1837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3576:0:22"
            },
            "scope": 2058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1844,
            "nodeType": "FunctionDefinition",
            "src": "3679:48:22",
            "nodes": [],
            "documentation": {
              "id": 1839,
              "nodeType": "StructuredDocumentation",
              "src": "3583:91:22",
              "text": "@notice Withdraw ETH from vault\n @param amount The amount of the ETH to withdraw"
            },
            "functionSelector": "3bed33ce",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawEther",
            "nameLocation": "3688:13:22",
            "parameters": {
              "id": 1842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1841,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3710:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1844,
                  "src": "3702:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3702:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3701:16:22"
            },
            "returnParameters": {
              "id": 1843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3726:0:22"
            },
            "scope": 2058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1852,
            "nodeType": "FunctionDefinition",
            "src": "3904:70:22",
            "nodes": [],
            "documentation": {
              "id": 1845,
              "nodeType": "StructuredDocumentation",
              "src": "3733:166:22",
              "text": "@notice Withdraw all free collateral from vault\n @param token The address of the token to withdraw\n @return amount The amount of the token withdrawn"
            },
            "functionSelector": "fa09e630",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nameLocation": "3913:11:22",
            "parameters": {
              "id": 1848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1847,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3933:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1852,
                  "src": "3925:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1846,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3925:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3924:15:22"
            },
            "returnParameters": {
              "id": 1851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1850,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3966:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1852,
                  "src": "3958:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3958:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3957:16:22"
            },
            "scope": 2058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1858,
            "nodeType": "FunctionDefinition",
            "src": "4094:62:22",
            "nodes": [],
            "documentation": {
              "id": 1853,
              "nodeType": "StructuredDocumentation",
              "src": "3980:109:22",
              "text": "@notice Withdraw all free collateral of ETH from vault\n @return amount The amount of ETH withdrawn"
            },
            "functionSelector": "31c91117",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAllEther",
            "nameLocation": "4103:16:22",
            "parameters": {
              "id": 1854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4119:2:22"
            },
            "returnParameters": {
              "id": 1857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1856,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4148:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1858,
                  "src": "4140:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4140:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4139:16:22"
            },
            "scope": 2058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1872,
            "nodeType": "FunctionDefinition",
            "src": "5044:191:22",
            "nodes": [],
            "documentation": {
              "id": 1859,
              "nodeType": "StructuredDocumentation",
              "src": "4162:877:22",
              "text": "@notice Liquidate trader's collateral by given settlement token amount or non settlement token amount\n @param trader The address of trader that will be liquidated\n @param token The address of non settlement collateral token that the trader will be liquidated\n @param amount The amount of settlement token that the liquidator will repay for trader or\n               the amount of non-settlement collateral token that the liquidator will charge from trader\n @param isDenominatedInSettlementToken Whether the amount is denominated in settlement token or not\n @return returnAmount The amount of a non-settlement token (in its native decimals) that is liquidated\n         when `isDenominatedInSettlementToken` is true or the amount of settlement token that is repaid\n         when `isDenominatedInSettlementToken` is false"
            },
            "functionSelector": "08511abb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateCollateral",
            "nameLocation": "5053:19:22",
            "parameters": {
              "id": 1868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1861,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "5090:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1872,
                  "src": "5082:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5082:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1863,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5114:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1872,
                  "src": "5106:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5106:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1865,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5137:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1872,
                  "src": "5129:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5129:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1867,
                  "mutability": "mutable",
                  "name": "isDenominatedInSettlementToken",
                  "nameLocation": "5158:30:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1872,
                  "src": "5153:35:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1866,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5153:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5072:122:22"
            },
            "returnParameters": {
              "id": 1871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1870,
                  "mutability": "mutable",
                  "name": "returnAmount",
                  "nameLocation": "5221:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1872,
                  "src": "5213:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5213:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5212:22:22"
            },
            "scope": 2058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1880,
            "nodeType": "FunctionDefinition",
            "src": "5935:75:22",
            "nodes": [],
            "documentation": {
              "id": 1873,
              "nodeType": "StructuredDocumentation",
              "src": "5241:689:22",
              "text": "@notice Get the specified trader's settlement token balance, without pending fee, funding payment\n         and owed realized PnL\n @dev The function is equivalent to `getBalanceByToken(trader, settlementToken)`\n      We keep this function solely for backward-compatibility with the older single-collateral system.\n      In practical applications, the developer might want to use `getSettlementTokenValue()` instead\n      because the latter includes pending fee, funding payment etc.\n      and therefore more accurately reflects a trader's settlement (ex. USDC) balance\n @return balance The balance amount (in settlement token's decimals)"
            },
            "functionSelector": "f8b2cb4f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "5944:10:22",
            "parameters": {
              "id": 1876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1875,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "5963:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1880,
                  "src": "5955:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5955:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5954:16:22"
            },
            "returnParameters": {
              "id": 1879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1878,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "6001:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1880,
                  "src": "5994:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1877,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5994:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5993:16:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1890,
            "nodeType": "FunctionDefinition",
            "src": "6275:121:22",
            "nodes": [],
            "documentation": {
              "id": 1881,
              "nodeType": "StructuredDocumentation",
              "src": "6016:254:22",
              "text": "@notice Get the balance of Vault of the specified collateral token and trader\n @param trader The address of the trader\n @param token The address of the collateral token\n @return balance The balance amount (in its native decimals)"
            },
            "functionSelector": "2e40a51b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getBalanceByToken",
            "nameLocation": "6284:17:22",
            "parameters": {
              "id": 1886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1883,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "6310:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1890,
                  "src": "6302:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6302:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1885,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6326:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1890,
                  "src": "6318:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6318:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6301:31:22"
            },
            "returnParameters": {
              "id": 1889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1888,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "6387:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1890,
                  "src": "6380:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1887,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6380:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6379:16:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1899,
            "nodeType": "FunctionDefinition",
            "src": "6550:127:22",
            "nodes": [],
            "documentation": {
              "id": 1891,
              "nodeType": "StructuredDocumentation",
              "src": "6402:143:22",
              "text": "@notice Get they array of collateral token addresses that a trader has\n @return collateralTokens array of collateral token addresses"
            },
            "functionSelector": "ed903f7a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCollateralTokens",
            "nameLocation": "6559:19:22",
            "parameters": {
              "id": 1894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1893,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "6587:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "6579:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6579:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6578:16:22"
            },
            "returnParameters": {
              "id": 1898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1897,
                  "mutability": "mutable",
                  "name": "collateralTokens",
                  "nameLocation": "6659:16:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "6642:33:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1895,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6642:7:22",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1896,
                    "nodeType": "ArrayTypeName",
                    "src": "6642:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6641:35:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1907,
            "nodeType": "FunctionDefinition",
            "src": "6870:114:22",
            "nodes": [],
            "documentation": {
              "id": 1900,
              "nodeType": "StructuredDocumentation",
              "src": "6683:182:22",
              "text": "@notice Get account value of the specified trader\n @param trader The address of the trader\n @return accountValueX10_S account value (in settlement token's decimals)"
            },
            "functionSelector": "5ae80951",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountValue",
            "nameLocation": "6879:15:22",
            "parameters": {
              "id": 1903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1902,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "6903:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1907,
                  "src": "6895:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6895:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6894:16:22"
            },
            "returnParameters": {
              "id": 1906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1905,
                  "mutability": "mutable",
                  "name": "accountValueX10_S",
                  "nameLocation": "6965:17:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1907,
                  "src": "6958:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1904,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6958:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6957:26:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1915,
            "nodeType": "FunctionDefinition",
            "src": "7312:114:22",
            "nodes": [],
            "documentation": {
              "id": 1908,
              "nodeType": "StructuredDocumentation",
              "src": "6990:317:22",
              "text": "@notice Get the free collateral value denominated in the settlement token of the specified trader\n @param trader The address of the trader\n @return freeCollateral the value (in settlement token's decimals) of free collateral available\n         for withdraw or opening new positions or orders)"
            },
            "functionSelector": "c3999444",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getFreeCollateral",
            "nameLocation": "7321:17:22",
            "parameters": {
              "id": 1911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1910,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "7347:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1915,
                  "src": "7339:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7339:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7338:16:22"
            },
            "returnParameters": {
              "id": 1914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1913,
                  "mutability": "mutable",
                  "name": "freeCollateral",
                  "nameLocation": "7410:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1915,
                  "src": "7402:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7402:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7401:24:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1925,
            "nodeType": "FunctionDefinition",
            "src": "8070:141:22",
            "nodes": [],
            "documentation": {
              "id": 1916,
              "nodeType": "StructuredDocumentation",
              "src": "7432:633:22",
              "text": "@notice Get the free collateral amount of the specified trader and collateral ratio\n @dev There are three configurations for different insolvency risk tolerances:\n      **conservative, moderate &aggressive**. We will start with the **conservative** one\n      and gradually move to **aggressive** to increase capital efficiency\n @param trader The address of the trader\n @param ratio The margin requirement ratio, imRatio or mmRatio\n @return freeCollateralByRatio freeCollateral (in settlement token's decimals), by using the\n         input margin requirement ratio; can be negative"
            },
            "functionSelector": "3ffd1303",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getFreeCollateralByRatio",
            "nameLocation": "8079:24:22",
            "parameters": {
              "id": 1921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1918,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "8112:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1925,
                  "src": "8104:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1917,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8104:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1920,
                  "mutability": "mutable",
                  "name": "ratio",
                  "nameLocation": "8127:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1925,
                  "src": "8120:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1919,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "8120:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8103:30:22"
            },
            "returnParameters": {
              "id": 1924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1923,
                  "mutability": "mutable",
                  "name": "freeCollateralByRatio",
                  "nameLocation": "8188:21:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1925,
                  "src": "8181:28:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1922,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8181:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8180:30:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1935,
            "nodeType": "FunctionDefinition",
            "src": "8508:136:22",
            "nodes": [],
            "documentation": {
              "id": 1926,
              "nodeType": "StructuredDocumentation",
              "src": "8217:286:22",
              "text": "@notice Get the free collateral amount of the specified collateral token of specified trader\n @param trader The address of the trader\n @param token The address of the collateral token\n @return freeCollateral amount of that token (in the token's native decimals)"
            },
            "functionSelector": "12ca1d17",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getFreeCollateralByToken",
            "nameLocation": "8517:24:22",
            "parameters": {
              "id": 1931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1928,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "8550:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1935,
                  "src": "8542:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8542:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1930,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8566:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1935,
                  "src": "8558:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8558:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8541:31:22"
            },
            "returnParameters": {
              "id": 1934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1933,
                  "mutability": "mutable",
                  "name": "freeCollateral",
                  "nameLocation": "8628:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1935,
                  "src": "8620:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8620:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8619:24:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1943,
            "nodeType": "FunctionDefinition",
            "src": "9320:112:22",
            "nodes": [],
            "documentation": {
              "id": 1936,
              "nodeType": "StructuredDocumentation",
              "src": "8650:665:22",
              "text": "@notice Get the specified trader's settlement value, including pending fee, funding payment,\n         owed realized PnL and unrealized PnL\n @dev Note the difference between `settlementTokenBalanceX10_S`, `getSettlementTokenValue()` and `getBalance()`:\n      They are all settlement token balances but with or without\n      pending fee, funding payment, owed realized PnL, unrealized PnL, respectively\n      In practical applications, we use `getSettlementTokenValue()` to get the trader's debt (if < 0)\n @param trader The address of the trader\n @return balance The balance amount (in settlement token's decimals)"
            },
            "functionSelector": "c3b66b31",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSettlementTokenValue",
            "nameLocation": "9329:23:22",
            "parameters": {
              "id": 1939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1938,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "9361:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "9353:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9353:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9352:16:22"
            },
            "returnParameters": {
              "id": 1942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1941,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "9423:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "9416:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1940,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9416:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9415:16:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1949,
            "nodeType": "FunctionDefinition",
            "src": "9740:102:22",
            "nodes": [],
            "documentation": {
              "id": 1944,
              "nodeType": "StructuredDocumentation",
              "src": "9438:297:22",
              "text": "@notice Get the settlement token address\n @dev We assume the settlement token should match the denominator of the price oracle.\n      i.e. if the settlement token is USDC, then the oracle should be priced in USD\n @return settlementToken The address of the settlement token"
            },
            "functionSelector": "12803c7d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSettlementToken",
            "nameLocation": "9749:18:22",
            "parameters": {
              "id": 1945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9767:2:22"
            },
            "returnParameters": {
              "id": 1948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1947,
                  "mutability": "mutable",
                  "name": "settlementToken",
                  "nameLocation": "9825:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "9817:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9817:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9816:25:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1957,
            "nodeType": "FunctionDefinition",
            "src": "10371:108:22",
            "nodes": [],
            "documentation": {
              "id": 1950,
              "nodeType": "StructuredDocumentation",
              "src": "10260:106:22",
              "text": "@param trader The address of the trader\n @return isLiquidatable If the trader can be liquidated"
            },
            "functionSelector": "042e02cf",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isLiquidatable",
            "nameLocation": "10380:14:22",
            "parameters": {
              "id": 1953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1952,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "10403:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1957,
                  "src": "10395:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10395:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10394:16:22"
            },
            "returnParameters": {
              "id": 1956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1955,
                  "mutability": "mutable",
                  "name": "isLiquidatable",
                  "nameLocation": "10463:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1957,
                  "src": "10458:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1954,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10458:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10457:21:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1965,
            "nodeType": "FunctionDefinition",
            "src": "10766:143:22",
            "nodes": [],
            "documentation": {
              "id": 1958,
              "nodeType": "StructuredDocumentation",
              "src": "10485:276:22",
              "text": "@notice get the margin requirement for collateral liquidation of a trader\n @dev this value is compared with `ClearingHouse.getAccountValue()` (int)\n @param trader The address of the trader\n @return marginRequirement margin requirement (in 18 decimals)"
            },
            "functionSelector": "71b6a5bb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMarginRequirementForCollateralLiquidation",
            "nameLocation": "10775:44:22",
            "parameters": {
              "id": 1961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1960,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "10828:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1965,
                  "src": "10820:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10820:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10819:16:22"
            },
            "returnParameters": {
              "id": 1964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1963,
                  "mutability": "mutable",
                  "name": "marginRequirement",
                  "nameLocation": "10890:17:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1965,
                  "src": "10883:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1962,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10883:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10882:26:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1971,
            "nodeType": "FunctionDefinition",
            "src": "11081:105:22",
            "nodes": [],
            "documentation": {
              "id": 1966,
              "nodeType": "StructuredDocumentation",
              "src": "10915:161:22",
              "text": "@notice Get the maintenance margin ratio for collateral liquidation\n @return collateralMmRatio The maintenance margin ratio for collateral liquidation"
            },
            "functionSelector": "ac4531bd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCollateralMmRatio",
            "nameLocation": "11090:20:22",
            "parameters": {
              "id": 1967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11110:2:22"
            },
            "returnParameters": {
              "id": 1970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1969,
                  "mutability": "mutable",
                  "name": "collateralMmRatio",
                  "nameLocation": "11167:17:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1971,
                  "src": "11160:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1968,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "11160:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11159:26:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1981,
            "nodeType": "FunctionDefinition",
            "src": "11542:152:22",
            "nodes": [],
            "documentation": {
              "id": 1972,
              "nodeType": "StructuredDocumentation",
              "src": "11192:345:22",
              "text": "@notice Get a trader's liquidatable collateral amount by a given settlement amount\n @param token The address of the token of the trader's collateral\n @param settlementX10_S The amount of settlement token the liquidator wants to pay\n @return collateral The collateral amount(in its native decimals) the liquidator can get"
            },
            "functionSelector": "b800a6b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLiquidatableCollateralBySettlement",
            "nameLocation": "11551:37:22",
            "parameters": {
              "id": 1977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1974,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "11606:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1981,
                  "src": "11598:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11598:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1976,
                  "mutability": "mutable",
                  "name": "settlementX10_S",
                  "nameLocation": "11629:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1981,
                  "src": "11621:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11621:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11588:62:22"
            },
            "returnParameters": {
              "id": 1980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1979,
                  "mutability": "mutable",
                  "name": "collateral",
                  "nameLocation": "11682:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1981,
                  "src": "11674:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11674:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11673:20:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1991,
            "nodeType": "FunctionDefinition",
            "src": "12057:148:22",
            "nodes": [],
            "documentation": {
              "id": 1982,
              "nodeType": "StructuredDocumentation",
              "src": "11700:352:22",
              "text": "@notice Get a trader's repaid settlement amount by a given collateral amount\n @param token The address of the token of the trader's collateral\n @param collateral The amount of collateral token the liquidator wants to get\n @return settlementX10_S The settlement amount(in settlement token's decimals) the liquidator needs to pay"
            },
            "functionSelector": "c0e695b8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRepaidSettlementByCollateral",
            "nameLocation": "12066:31:22",
            "parameters": {
              "id": 1987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1984,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "12106:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1991,
                  "src": "12098:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12098:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1986,
                  "mutability": "mutable",
                  "name": "collateral",
                  "nameLocation": "12121:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1991,
                  "src": "12113:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1985,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12113:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12097:35:22"
            },
            "returnParameters": {
              "id": 1990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1989,
                  "mutability": "mutable",
                  "name": "settlementX10_S",
                  "nameLocation": "12188:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 1991,
                  "src": "12180:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12180:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12179:25:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2003,
            "nodeType": "FunctionDefinition",
            "src": "12788:260:22",
            "nodes": [],
            "documentation": {
              "id": 1992,
              "nodeType": "StructuredDocumentation",
              "src": "12211:572:22",
              "text": "@notice Get a trader's max repaid settlement & max liquidatable collateral by a given collateral token\n @param trader The address of the trader\n @param token The address of the token of the trader's collateral\n @return maxRepaidSettlementX10_S The maximum settlement amount(in settlement token's decimals)\n         the liquidator needs to pay to liquidate a trader's collateral token\n @return maxLiquidatableCollateral The maximum liquidatable collateral amount\n         (in the collateral token's native decimals) of a trader"
            },
            "functionSelector": "a9b786b2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMaxRepaidSettlementAndLiquidatableCollateral",
            "nameLocation": "12797:47:22",
            "parameters": {
              "id": 1997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1994,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "12862:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "12854:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12854:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1996,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "12886:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "12878:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12878:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12844:53:22"
            },
            "returnParameters": {
              "id": 2002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1999,
                  "mutability": "mutable",
                  "name": "maxRepaidSettlementX10_S",
                  "nameLocation": "12966:24:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "12958:32:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12958:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2001,
                  "mutability": "mutable",
                  "name": "maxLiquidatableCollateral",
                  "nameLocation": "13012:25:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "13004:33:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13004:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12944:103:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2009,
            "nodeType": "FunctionDefinition",
            "src": "13230:59:22",
            "nodes": [],
            "documentation": {
              "id": 2004,
              "nodeType": "StructuredDocumentation",
              "src": "13054:171:22",
              "text": "@notice Get settlement token decimals\n @dev cached the settlement token's decimal for gas optimization\n @return decimals The decimals of settlement token"
            },
            "functionSelector": "313ce567",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "13239:8:22",
            "parameters": {
              "id": 2005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13247:2:22"
            },
            "returnParameters": {
              "id": 2008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2007,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nameLocation": "13279:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2009,
                  "src": "13273:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2006,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13273:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13272:16:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2015,
            "nodeType": "FunctionDefinition",
            "src": "13448:67:22",
            "nodes": [],
            "documentation": {
              "id": 2010,
              "nodeType": "StructuredDocumentation",
              "src": "13295:148:22",
              "text": "@notice Get the borrowed settlement token amount from insurance fund\n @return debtAmount The debt amount (in settlement token's decimals)"
            },
            "functionSelector": "34ce998a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalDebt",
            "nameLocation": "13457:12:22",
            "parameters": {
              "id": 2011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13469:2:22"
            },
            "returnParameters": {
              "id": 2014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2013,
                  "mutability": "mutable",
                  "name": "debtAmount",
                  "nameLocation": "13503:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2015,
                  "src": "13495:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13495:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13494:20:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2021,
            "nodeType": "FunctionDefinition",
            "src": "13662:110:22",
            "nodes": [],
            "documentation": {
              "id": 2016,
              "nodeType": "StructuredDocumentation",
              "src": "13521:136:22",
              "text": "@notice Get `ClearingHouseConfig` contract address\n @return clearingHouseConfig The address of `ClearingHouseConfig` contract"
            },
            "functionSelector": "aa2a8294",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getClearingHouseConfig",
            "nameLocation": "13671:22:22",
            "parameters": {
              "id": 2017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13693:2:22"
            },
            "returnParameters": {
              "id": 2020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2019,
                  "mutability": "mutable",
                  "name": "clearingHouseConfig",
                  "nameLocation": "13751:19:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2021,
                  "src": "13743:27:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13743:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13742:29:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2027,
            "nodeType": "FunctionDefinition",
            "src": "13904:76:22",
            "nodes": [],
            "documentation": {
              "id": 2022,
              "nodeType": "StructuredDocumentation",
              "src": "13778:121:22",
              "text": "@notice Get `AccountBalance` contract address\n @return accountBalance The address of `AccountBalance` contract"
            },
            "functionSelector": "6896fabf",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountBalance",
            "nameLocation": "13913:17:22",
            "parameters": {
              "id": 2023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13930:2:22"
            },
            "returnParameters": {
              "id": 2026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2025,
                  "mutability": "mutable",
                  "name": "accountBalance",
                  "nameLocation": "13964:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2027,
                  "src": "13956:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13956:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13955:24:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2033,
            "nodeType": "FunctionDefinition",
            "src": "14109:74:22",
            "nodes": [],
            "documentation": {
              "id": 2028,
              "nodeType": "StructuredDocumentation",
              "src": "13986:118:22",
              "text": "@notice Get `InsuranceFund` contract address\n @return insuranceFund The address of `InsuranceFund` contract"
            },
            "functionSelector": "158626f7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInsuranceFund",
            "nameLocation": "14118:16:22",
            "parameters": {
              "id": 2029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14134:2:22"
            },
            "returnParameters": {
              "id": 2032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2031,
                  "mutability": "mutable",
                  "name": "insuranceFund",
                  "nameLocation": "14168:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2033,
                  "src": "14160:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14160:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14159:23:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2039,
            "nodeType": "FunctionDefinition",
            "src": "14297:64:22",
            "nodes": [],
            "documentation": {
              "id": 2034,
              "nodeType": "StructuredDocumentation",
              "src": "14189:103:22",
              "text": "@notice Get `Exchange` contract address\n @return exchange The address of `Exchange` contract"
            },
            "functionSelector": "f807cd22",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getExchange",
            "nameLocation": "14306:11:22",
            "parameters": {
              "id": 2035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14317:2:22"
            },
            "returnParameters": {
              "id": 2038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2037,
                  "mutability": "mutable",
                  "name": "exchange",
                  "nameLocation": "14351:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "14343:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14343:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14342:18:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2045,
            "nodeType": "FunctionDefinition",
            "src": "14490:74:22",
            "nodes": [],
            "documentation": {
              "id": 2040,
              "nodeType": "StructuredDocumentation",
              "src": "14367:118:22",
              "text": "@notice Get `ClearingHouse` contract address\n @return clearingHouse The address of `ClearingHouse` contract"
            },
            "functionSelector": "c575ff79",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getClearingHouse",
            "nameLocation": "14499:16:22",
            "parameters": {
              "id": 2041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14515:2:22"
            },
            "returnParameters": {
              "id": 2044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2043,
                  "mutability": "mutable",
                  "name": "clearingHouse",
                  "nameLocation": "14549:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2045,
                  "src": "14541:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14541:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14540:23:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2051,
            "nodeType": "FunctionDefinition",
            "src": "14701:102:22",
            "nodes": [],
            "documentation": {
              "id": 2046,
              "nodeType": "StructuredDocumentation",
              "src": "14570:126:22",
              "text": "@notice Get `CollateralManager` contract address\n @return clearingHouse The address of `CollateralManager` contract"
            },
            "functionSelector": "dfa441be",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCollateralManager",
            "nameLocation": "14710:20:22",
            "parameters": {
              "id": 2047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14730:2:22"
            },
            "returnParameters": {
              "id": 2050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2049,
                  "mutability": "mutable",
                  "name": "clearingHouse",
                  "nameLocation": "14788:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2051,
                  "src": "14780:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14780:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14779:23:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2057,
            "nodeType": "FunctionDefinition",
            "src": "14916:66:22",
            "nodes": [],
            "documentation": {
              "id": 2052,
              "nodeType": "StructuredDocumentation",
              "src": "14809:102:22",
              "text": "@notice Get `WETH9` contract address\n @return clearingHouse The address of `WETH9` contract"
            },
            "functionSelector": "d9fd870b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getWETH9",
            "nameLocation": "14925:8:22",
            "parameters": {
              "id": 2053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14933:2:22"
            },
            "returnParameters": {
              "id": 2056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2055,
                  "mutability": "mutable",
                  "name": "clearingHouse",
                  "nameLocation": "14967:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2057,
                  "src": "14959:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14959:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14958:23:22"
            },
            "scope": 2058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IVault",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          2058
        ],
        "name": "IVault",
        "nameLocation": "101:6:22",
        "scope": 2059,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 22
}