{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "accountBalance",
          "type": "address"
        }
      ],
      "name": "AccountBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "markTwap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "indexTwap",
          "type": "uint256"
        }
      ],
      "name": "FundingUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "maxTickCrossedWithinBlock",
          "type": "uint24"
        }
      ],
      "name": "MaxTickCrossedWithinBlockChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getAccountBalance",
      "outputs": [
        {
          "internalType": "address",
          "name": "accountBalance",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "getAllPendingFundingPayment",
      "outputs": [
        {
          "internalType": "int256",
          "name": "pendingFundingPayment",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getClearingHouseConfig",
      "outputs": [
        {
          "internalType": "address",
          "name": "clearingHouse",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "getMaxTickCrossedWithinBlock",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "maxTickCrossedWithinBlock",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOrderBook",
      "outputs": [
        {
          "internalType": "address",
          "name": "orderBook",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "getPendingFundingPayment",
      "outputs": [
        {
          "internalType": "int256",
          "name": "pendingFundingPayment",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "base",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "quote",
              "type": "int256"
            }
          ],
          "internalType": "struct IExchange.RealizePnlParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "getPnlToBeRealized",
      "outputs": [
        {
          "internalType": "int256",
          "name": "pnlToBeRealized",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "twapInterval",
          "type": "uint32"
        }
      ],
      "name": "getSqrtMarkTwapX96",
      "outputs": [
        {
          "internalType": "uint160",
          "name": "sqrtMarkTwapX96",
          "type": "uint160"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "isOverPriceSpread",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "settleFunding",
      "outputs": [
        {
          "internalType": "int256",
          "name": "fundingPayment",
          "type": "int256"
        },
        {
          "components": [
            {
              "internalType": "int256",
              "name": "twPremiumX96",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "twPremiumDivBySqrtPriceX96",
              "type": "int256"
            }
          ],
          "internalType": "struct Growth",
          "name": "fundingGrowthGlobal",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isBaseToQuote",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isExactInput",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isClose",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct IExchange.SwapParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "base",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quote",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "exchangedPositionSize",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "exchangedPositionNotional",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "insuranceFundFee",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "pnlToBeRealized",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPriceAfterX96",
              "type": "uint256"
            },
            {
              "internalType": "int24",
              "name": "tick",
              "type": "int24"
            },
            {
              "internalType": "bool",
              "name": "isPartialClose",
              "type": "bool"
            }
          ],
          "internalType": "struct IExchange.SwapResponse",
          "name": "swapResponse",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getAccountBalance()": "6896fabf",
    "getAllPendingFundingPayment(address)": "80f57f11",
    "getClearingHouseConfig()": "aa2a8294",
    "getMaxTickCrossedWithinBlock(address)": "29386b7b",
    "getOrderBook()": "b248c4ef",
    "getPendingFundingPayment(address,address)": "cb379aa2",
    "getPnlToBeRealized((address,address,int256,int256))": "1393a469",
    "getSqrtMarkTwapX96(address,uint32)": "99e4a771",
    "isOverPriceSpread(address)": "ff818011",
    "settleFunding(address,address)": "1e81ac33",
    "swap((address,address,bool,bool,bool,uint256,uint160))": "4314ca1c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accountBalance\",\"type\":\"address\"}],\"name\":\"AccountBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"markTwap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"indexTwap\",\"type\":\"uint256\"}],\"name\":\"FundingUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"maxTickCrossedWithinBlock\",\"type\":\"uint24\"}],\"name\":\"MaxTickCrossedWithinBlockChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAccountBalance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"accountBalance\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"getAllPendingFundingPayment\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"pendingFundingPayment\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClearingHouseConfig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"clearingHouse\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"getMaxTickCrossedWithinBlock\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"maxTickCrossedWithinBlock\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOrderBook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"orderBook\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"getPendingFundingPayment\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"pendingFundingPayment\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"base\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"quote\",\"type\":\"int256\"}],\"internalType\":\"struct IExchange.RealizePnlParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"getPnlToBeRealized\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"pnlToBeRealized\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"twapInterval\",\"type\":\"uint32\"}],\"name\":\"getSqrtMarkTwapX96\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtMarkTwapX96\",\"type\":\"uint160\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"isOverPriceSpread\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"settleFunding\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"fundingPayment\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"twPremiumX96\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"twPremiumDivBySqrtPriceX96\",\"type\":\"int256\"}],\"internalType\":\"struct Growth\",\"name\":\"fundingGrowthGlobal\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isBaseToQuote\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isExactInput\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClose\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IExchange.SwapParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"swap\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"base\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quote\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"exchangedPositionSize\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"exchangedPositionNotional\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insuranceFundFee\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"pnlToBeRealized\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPriceAfterX96\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"isPartialClose\",\"type\":\"bool\"}],\"internalType\":\"struct IExchange.SwapResponse\",\"name\":\"swapResponse\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AccountBalanceChanged(address)\":{\"params\":{\"accountBalance\":\"The address of accountBalance contract\"}},\"FundingUpdated(address,uint256,uint256)\":{\"params\":{\"baseToken\":\"Address of the base token\",\"indexTwap\":\"The index twap price when the funding growth is updated\",\"markTwap\":\"The market twap price when the funding growth is updated\"}},\"MaxTickCrossedWithinBlockChanged(address,uint24)\":{\"params\":{\"baseToken\":\"Address of the base token\",\"maxTickCrossedWithinBlock\":\"Max tick allowed to be crossed within block when reducing position\"}}},\"kind\":\"dev\",\"methods\":{\"getAccountBalance()\":{\"returns\":{\"accountBalance\":\"`AccountBalance` contract address\"}},\"getAllPendingFundingPayment(address)\":{\"returns\":{\"pendingFundingPayment\":\"The pending funding payment of the trader. Positive value means the trader pays funding, negative value means the trader receives funding.\"}},\"getClearingHouseConfig()\":{\"returns\":{\"clearingHouse\":\"`ClearingHouseConfig` contract address\"}},\"getMaxTickCrossedWithinBlock(address)\":{\"params\":{\"baseToken\":\"Address of the base token\"},\"returns\":{\"maxTickCrossedWithinBlock\":\"The max ticks allowed to be crossed within a block when reducing position\"}},\"getOrderBook()\":{\"returns\":{\"orderBook\":\"`OrderBook` contract address\"}},\"getPendingFundingPayment(address,address)\":{\"details\":\"this is the view version of _updateFundingGrowth()\",\"returns\":{\"pendingFundingPayment\":\"The pending funding payment of a trader in one market, including liquidity & balance coefficients. Positive value means the trader pays funding, negative value means the trader receives funding.\"}},\"getPnlToBeRealized((address,address,int256,int256))\":{\"details\":\"This function normally won't be needed by traders, but it might be useful for 3rd party\",\"params\":{\"params\":\"The params needed to do the query, encoded as `RealizePnlParams` in calldata\"},\"returns\":{\"pnlToBeRealized\":\"The pnl that can be realized if trader reduce position\"}},\"getSqrtMarkTwapX96(address,uint32)\":{\"details\":\"The return value is a X96 number\",\"params\":{\"baseToken\":\"Address of the base token\",\"twapInterval\":\"The time interval in seconds\"},\"returns\":{\"sqrtMarkTwapX96\":\"The square root of the market twap price\"}},\"isOverPriceSpread(address)\":{\"params\":{\"baseToken\":\"Address of the base token\"},\"returns\":{\"_0\":\"true if over the maximum price spread\"}},\"settleFunding(address,address)\":{\"details\":\"This function should be called at the beginning of every high-level function, such as `openPosition()`      while it doesn't matter who calls this function      this function 1. settles personal funding payment 2. updates global funding growth      personal funding payment is settled whenever there is pending funding payment      the global funding growth update only happens once per unique timestamp (not blockNumber, due to Arbitrum)\",\"returns\":{\"fundingGrowthGlobal\":\"the up-to-date globalFundingGrowth, usually used for later calculations\",\"fundingPayment\":\"the funding payment of a trader in one market should be settled into owned realized Pnl\"}},\"swap((address,address,bool,bool,bool,uint256,uint160))\":{\"details\":\"can only be called from ClearingHouse\",\"params\":{\"params\":\"The parameters of the swap\"},\"returns\":{\"swapResponse\":\"The result of the swap\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AccountBalanceChanged(address)\":{\"notice\":\"Emitted when accountBalance is updated\"},\"FundingUpdated(address,uint256,uint256)\":{\"notice\":\"Emitted when the global funding growth is updated\"},\"MaxTickCrossedWithinBlockChanged(address,uint24)\":{\"notice\":\"Emitted when maxTickCrossedWithinBlock is updated\"}},\"kind\":\"user\",\"methods\":{\"getAccountBalance()\":{\"notice\":\"Get `AccountBalance` contract address\"},\"getAllPendingFundingPayment(address)\":{\"notice\":\"Get all the pending funding payment for a trader\"},\"getClearingHouseConfig()\":{\"notice\":\"Get `ClearingHouseConfig` contract address\"},\"getMaxTickCrossedWithinBlock(address)\":{\"notice\":\"Get the max ticks allowed to be crossed within a block when reducing position\"},\"getOrderBook()\":{\"notice\":\"Get `OrderBook` contract address\"},\"getPendingFundingPayment(address,address)\":{\"notice\":\"Get the pending funding payment for a trader in a given market\"},\"getPnlToBeRealized((address,address,int256,int256))\":{\"notice\":\"Get the pnl that can be realized if trader reduce position\"},\"getSqrtMarkTwapX96(address,uint32)\":{\"notice\":\"Get the square root of the market twap price with the given time interval\"},\"isOverPriceSpread(address)\":{\"notice\":\"Check if current price spread between market price and index twap is over maximum price spread.\"},\"settleFunding(address,address)\":{\"notice\":\"Settle the funding payment for the time interval since the last settlement\"},\"swap((address,address,bool,bool,bool,uint256,uint160))\":{\"notice\":\"The actual swap function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/Perpfi/IExchange.sol\":\"IExchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@perp/=node_modules/@perp/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/Interfaces/Perpfi/IExchange.sol\":{\"keccak256\":\"0x14706d06f6a99e17f48bdee39710e8f57a9e20d3493bc609f920632e7f4bf646\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8f401e0b089cfae167540a7704c5971aebf0da9c67239fb996598194a64a7e4a\",\"dweb:/ipfs/QmbLTb64AT8m5bTcs8B9nSkUQPfobTmCUp8n7RW9dmR4Gt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "accountBalance",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AccountBalanceChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "markTwap",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "indexTwap",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FundingUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint24",
              "name": "maxTickCrossedWithinBlock",
              "type": "uint24",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxTickCrossedWithinBlockChanged",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountBalance",
          "outputs": [
            {
              "internalType": "address",
              "name": "accountBalance",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllPendingFundingPayment",
          "outputs": [
            {
              "internalType": "int256",
              "name": "pendingFundingPayment",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getClearingHouseConfig",
          "outputs": [
            {
              "internalType": "address",
              "name": "clearingHouse",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxTickCrossedWithinBlock",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "maxTickCrossedWithinBlock",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOrderBook",
          "outputs": [
            {
              "internalType": "address",
              "name": "orderBook",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPendingFundingPayment",
          "outputs": [
            {
              "internalType": "int256",
              "name": "pendingFundingPayment",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IExchange.RealizePnlParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "trader",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "baseToken",
                  "type": "address"
                },
                {
                  "internalType": "int256",
                  "name": "base",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "quote",
                  "type": "int256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPnlToBeRealized",
          "outputs": [
            {
              "internalType": "int256",
              "name": "pnlToBeRealized",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "twapInterval",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSqrtMarkTwapX96",
          "outputs": [
            {
              "internalType": "uint160",
              "name": "sqrtMarkTwapX96",
              "type": "uint160"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOverPriceSpread",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleFunding",
          "outputs": [
            {
              "internalType": "int256",
              "name": "fundingPayment",
              "type": "int256"
            },
            {
              "internalType": "struct Growth",
              "name": "fundingGrowthGlobal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int256",
                  "name": "twPremiumX96",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "twPremiumDivBySqrtPriceX96",
                  "type": "int256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IExchange.SwapParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "trader",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "baseToken",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isBaseToQuote",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isExactInput",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isClose",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "struct IExchange.SwapResponse",
              "name": "swapResponse",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "base",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quote",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "exchangedPositionSize",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "exchangedPositionNotional",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "insuranceFundFee",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "pnlToBeRealized",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPriceAfterX96",
                  "type": "uint256"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "bool",
                  "name": "isPartialClose",
                  "type": "bool"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getAccountBalance()": {
            "returns": {
              "accountBalance": "`AccountBalance` contract address"
            }
          },
          "getAllPendingFundingPayment(address)": {
            "returns": {
              "pendingFundingPayment": "The pending funding payment of the trader. Positive value means the trader pays funding, negative value means the trader receives funding."
            }
          },
          "getClearingHouseConfig()": {
            "returns": {
              "clearingHouse": "`ClearingHouseConfig` contract address"
            }
          },
          "getMaxTickCrossedWithinBlock(address)": {
            "params": {
              "baseToken": "Address of the base token"
            },
            "returns": {
              "maxTickCrossedWithinBlock": "The max ticks allowed to be crossed within a block when reducing position"
            }
          },
          "getOrderBook()": {
            "returns": {
              "orderBook": "`OrderBook` contract address"
            }
          },
          "getPendingFundingPayment(address,address)": {
            "details": "this is the view version of _updateFundingGrowth()",
            "returns": {
              "pendingFundingPayment": "The pending funding payment of a trader in one market, including liquidity & balance coefficients. Positive value means the trader pays funding, negative value means the trader receives funding."
            }
          },
          "getPnlToBeRealized((address,address,int256,int256))": {
            "details": "This function normally won't be needed by traders, but it might be useful for 3rd party",
            "params": {
              "params": "The params needed to do the query, encoded as `RealizePnlParams` in calldata"
            },
            "returns": {
              "pnlToBeRealized": "The pnl that can be realized if trader reduce position"
            }
          },
          "getSqrtMarkTwapX96(address,uint32)": {
            "details": "The return value is a X96 number",
            "params": {
              "baseToken": "Address of the base token",
              "twapInterval": "The time interval in seconds"
            },
            "returns": {
              "sqrtMarkTwapX96": "The square root of the market twap price"
            }
          },
          "isOverPriceSpread(address)": {
            "params": {
              "baseToken": "Address of the base token"
            },
            "returns": {
              "_0": "true if over the maximum price spread"
            }
          },
          "settleFunding(address,address)": {
            "details": "This function should be called at the beginning of every high-level function, such as `openPosition()`      while it doesn't matter who calls this function      this function 1. settles personal funding payment 2. updates global funding growth      personal funding payment is settled whenever there is pending funding payment      the global funding growth update only happens once per unique timestamp (not blockNumber, due to Arbitrum)",
            "returns": {
              "fundingGrowthGlobal": "the up-to-date globalFundingGrowth, usually used for later calculations",
              "fundingPayment": "the funding payment of a trader in one market should be settled into owned realized Pnl"
            }
          },
          "swap((address,address,bool,bool,bool,uint256,uint160))": {
            "details": "can only be called from ClearingHouse",
            "params": {
              "params": "The parameters of the swap"
            },
            "returns": {
              "swapResponse": "The result of the swap"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getAccountBalance()": {
            "notice": "Get `AccountBalance` contract address"
          },
          "getAllPendingFundingPayment(address)": {
            "notice": "Get all the pending funding payment for a trader"
          },
          "getClearingHouseConfig()": {
            "notice": "Get `ClearingHouseConfig` contract address"
          },
          "getMaxTickCrossedWithinBlock(address)": {
            "notice": "Get the max ticks allowed to be crossed within a block when reducing position"
          },
          "getOrderBook()": {
            "notice": "Get `OrderBook` contract address"
          },
          "getPendingFundingPayment(address,address)": {
            "notice": "Get the pending funding payment for a trader in a given market"
          },
          "getPnlToBeRealized((address,address,int256,int256))": {
            "notice": "Get the pnl that can be realized if trader reduce position"
          },
          "getSqrtMarkTwapX96(address,uint32)": {
            "notice": "Get the square root of the market twap price with the given time interval"
          },
          "isOverPriceSpread(address)": {
            "notice": "Check if current price spread between market price and index twap is over maximum price spread."
          },
          "settleFunding(address,address)": {
            "notice": "Settle the funding payment for the time interval since the last settlement"
          },
          "swap((address,address,bool,bool,bool,uint256,uint160))": {
            "notice": "The actual swap function"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@perp/=node_modules/@perp/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Interfaces/Perpfi/IExchange.sol": "IExchange"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Interfaces/Perpfi/IExchange.sol": {
        "keccak256": "0x14706d06f6a99e17f48bdee39710e8f57a9e20d3493bc609f920632e7f4bf646",
        "urls": [
          "bzz-raw://8f401e0b089cfae167540a7704c5971aebf0da9c67239fb996598194a64a7e4a",
          "dweb:/ipfs/QmbLTb64AT8m5bTcs8B9nSkUQPfobTmCUp8n7RW9dmR4Gt"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Interfaces/Perpfi/IExchange.sol",
    "id": 2679,
    "exportedSymbols": {
      "Growth": [
        2506
      ],
      "IExchange": [
        2678
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:6856:22",
    "nodes": [
      {
        "id": 2500,
        "nodeType": "PragmaDirective",
        "src": "45:23:22",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 2501,
        "nodeType": "PragmaDirective",
        "src": "69:19:22",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 2506,
        "nodeType": "StructDefinition",
        "src": "369:81:22",
        "nodes": [],
        "canonicalName": "Growth",
        "members": [
          {
            "constant": false,
            "id": 2503,
            "mutability": "mutable",
            "name": "twPremiumX96",
            "nameLocation": "396:12:22",
            "nodeType": "VariableDeclaration",
            "scope": 2506,
            "src": "389:19:22",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 2502,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "389:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2505,
            "mutability": "mutable",
            "name": "twPremiumDivBySqrtPriceX96",
            "nameLocation": "421:26:22",
            "nodeType": "VariableDeclaration",
            "scope": 2506,
            "src": "414:33:22",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 2504,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "414:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Growth",
        "nameLocation": "376:6:22",
        "scope": 2679,
        "visibility": "public"
      },
      {
        "id": 2678,
        "nodeType": "ContractDefinition",
        "src": "452:6448:22",
        "nodes": [
          {
            "id": 2521,
            "nodeType": "StructDefinition",
            "src": "653:212:22",
            "nodes": [],
            "canonicalName": "IExchange.SwapParams",
            "members": [
              {
                "constant": false,
                "id": 2508,
                "mutability": "mutable",
                "name": "trader",
                "nameLocation": "689:6:22",
                "nodeType": "VariableDeclaration",
                "scope": 2521,
                "src": "681:14:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2507,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "681:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2510,
                "mutability": "mutable",
                "name": "baseToken",
                "nameLocation": "713:9:22",
                "nodeType": "VariableDeclaration",
                "scope": 2521,
                "src": "705:17:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2509,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "705:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2512,
                "mutability": "mutable",
                "name": "isBaseToQuote",
                "nameLocation": "737:13:22",
                "nodeType": "VariableDeclaration",
                "scope": 2521,
                "src": "732:18:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2511,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "732:4:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2514,
                "mutability": "mutable",
                "name": "isExactInput",
                "nameLocation": "765:12:22",
                "nodeType": "VariableDeclaration",
                "scope": 2521,
                "src": "760:17:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2513,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "760:4:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2516,
                "mutability": "mutable",
                "name": "isClose",
                "nameLocation": "792:7:22",
                "nodeType": "VariableDeclaration",
                "scope": 2521,
                "src": "787:12:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2515,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "787:4:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2518,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "817:6:22",
                "nodeType": "VariableDeclaration",
                "scope": 2521,
                "src": "809:14:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2517,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "809:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2520,
                "mutability": "mutable",
                "name": "sqrtPriceLimitX96",
                "nameLocation": "841:17:22",
                "nodeType": "VariableDeclaration",
                "scope": 2521,
                "src": "833:25:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint160",
                  "typeString": "uint160"
                },
                "typeName": {
                  "id": 2519,
                  "name": "uint160",
                  "nodeType": "ElementaryTypeName",
                  "src": "833:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SwapParams",
            "nameLocation": "660:10:22",
            "scope": 2678,
            "visibility": "public"
          },
          {
            "id": 2542,
            "nodeType": "StructDefinition",
            "src": "871:323:22",
            "nodes": [],
            "canonicalName": "IExchange.SwapResponse",
            "members": [
              {
                "constant": false,
                "id": 2523,
                "mutability": "mutable",
                "name": "base",
                "nameLocation": "909:4:22",
                "nodeType": "VariableDeclaration",
                "scope": 2542,
                "src": "901:12:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2522,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "901:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2525,
                "mutability": "mutable",
                "name": "quote",
                "nameLocation": "931:5:22",
                "nodeType": "VariableDeclaration",
                "scope": 2542,
                "src": "923:13:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2524,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "923:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2527,
                "mutability": "mutable",
                "name": "exchangedPositionSize",
                "nameLocation": "953:21:22",
                "nodeType": "VariableDeclaration",
                "scope": 2542,
                "src": "946:28:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 2526,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "946:6:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2529,
                "mutability": "mutable",
                "name": "exchangedPositionNotional",
                "nameLocation": "991:25:22",
                "nodeType": "VariableDeclaration",
                "scope": 2542,
                "src": "984:32:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 2528,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "984:6:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2531,
                "mutability": "mutable",
                "name": "fee",
                "nameLocation": "1034:3:22",
                "nodeType": "VariableDeclaration",
                "scope": 2542,
                "src": "1026:11:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2530,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1026:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2533,
                "mutability": "mutable",
                "name": "insuranceFundFee",
                "nameLocation": "1055:16:22",
                "nodeType": "VariableDeclaration",
                "scope": 2542,
                "src": "1047:24:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2532,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1047:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2535,
                "mutability": "mutable",
                "name": "pnlToBeRealized",
                "nameLocation": "1088:15:22",
                "nodeType": "VariableDeclaration",
                "scope": 2542,
                "src": "1081:22:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 2534,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1081:6:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2537,
                "mutability": "mutable",
                "name": "sqrtPriceAfterX96",
                "nameLocation": "1121:17:22",
                "nodeType": "VariableDeclaration",
                "scope": 2542,
                "src": "1113:25:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2536,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1113:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2539,
                "mutability": "mutable",
                "name": "tick",
                "nameLocation": "1154:4:22",
                "nodeType": "VariableDeclaration",
                "scope": 2542,
                "src": "1148:10:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int24",
                  "typeString": "int24"
                },
                "typeName": {
                  "id": 2538,
                  "name": "int24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1148:5:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2541,
                "mutability": "mutable",
                "name": "isPartialClose",
                "nameLocation": "1173:14:22",
                "nodeType": "VariableDeclaration",
                "scope": 2542,
                "src": "1168:19:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2540,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1168:4:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SwapResponse",
            "nameLocation": "878:12:22",
            "scope": 2678,
            "visibility": "public"
          },
          {
            "id": 2553,
            "nodeType": "StructDefinition",
            "src": "1200:157:22",
            "nodes": [],
            "canonicalName": "IExchange.SwapCallbackData",
            "members": [
              {
                "constant": false,
                "id": 2544,
                "mutability": "mutable",
                "name": "trader",
                "nameLocation": "1242:6:22",
                "nodeType": "VariableDeclaration",
                "scope": 2553,
                "src": "1234:14:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2543,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1234:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2546,
                "mutability": "mutable",
                "name": "baseToken",
                "nameLocation": "1266:9:22",
                "nodeType": "VariableDeclaration",
                "scope": 2553,
                "src": "1258:17:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2545,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1258:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2548,
                "mutability": "mutable",
                "name": "pool",
                "nameLocation": "1293:4:22",
                "nodeType": "VariableDeclaration",
                "scope": 2553,
                "src": "1285:12:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2547,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1285:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2550,
                "mutability": "mutable",
                "name": "uniswapFeeRatio",
                "nameLocation": "1314:15:22",
                "nodeType": "VariableDeclaration",
                "scope": 2553,
                "src": "1307:22:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 2549,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1307:6:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2552,
                "mutability": "mutable",
                "name": "fee",
                "nameLocation": "1347:3:22",
                "nodeType": "VariableDeclaration",
                "scope": 2553,
                "src": "1339:11:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2551,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1339:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SwapCallbackData",
            "nameLocation": "1207:16:22",
            "scope": 2678,
            "visibility": "public"
          },
          {
            "id": 2562,
            "nodeType": "StructDefinition",
            "src": "1363:125:22",
            "nodes": [],
            "canonicalName": "IExchange.RealizePnlParams",
            "members": [
              {
                "constant": false,
                "id": 2555,
                "mutability": "mutable",
                "name": "trader",
                "nameLocation": "1405:6:22",
                "nodeType": "VariableDeclaration",
                "scope": 2562,
                "src": "1397:14:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2554,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1397:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2557,
                "mutability": "mutable",
                "name": "baseToken",
                "nameLocation": "1429:9:22",
                "nodeType": "VariableDeclaration",
                "scope": 2562,
                "src": "1421:17:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2556,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1421:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2559,
                "mutability": "mutable",
                "name": "base",
                "nameLocation": "1455:4:22",
                "nodeType": "VariableDeclaration",
                "scope": 2562,
                "src": "1448:11:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 2558,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1448:6:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2561,
                "mutability": "mutable",
                "name": "quote",
                "nameLocation": "1476:5:22",
                "nodeType": "VariableDeclaration",
                "scope": 2562,
                "src": "1469:12:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 2560,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1469:6:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RealizePnlParams",
            "nameLocation": "1370:16:22",
            "scope": 2678,
            "visibility": "public"
          },
          {
            "id": 2571,
            "nodeType": "EventDefinition",
            "src": "1773:115:22",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 2563,
              "nodeType": "StructuredDocumentation",
              "src": "1494:274:22",
              "text": "@notice Emitted when the global funding growth is updated\n @param baseToken Address of the base token\n @param markTwap The market twap price when the funding growth is updated\n @param indexTwap The index twap price when the funding growth is updated"
            },
            "eventSelector": "54e4482fe1d38392effe5d53f0e9e72f60221a75a10cea7abbb684bfb03519bf",
            "name": "FundingUpdated",
            "nameLocation": "1779:14:22",
            "parameters": {
              "id": 2570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2565,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "1819:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2571,
                  "src": "1803:25:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2567,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "markTwap",
                  "nameLocation": "1846:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2571,
                  "src": "1838:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1838:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2569,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "indexTwap",
                  "nameLocation": "1872:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2571,
                  "src": "1864:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1793:94:22"
            }
          },
          {
            "id": 2578,
            "nodeType": "EventDefinition",
            "src": "2119:122:22",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 2572,
              "nodeType": "StructuredDocumentation",
              "src": "1894:220:22",
              "text": "@notice Emitted when maxTickCrossedWithinBlock is updated\n @param baseToken Address of the base token\n @param maxTickCrossedWithinBlock Max tick allowed to be crossed within block when reducing position"
            },
            "eventSelector": "998d553f208e581d188c66da9e7d19bac5ca64d002753791210c4271c8e955d0",
            "name": "MaxTickCrossedWithinBlockChanged",
            "nameLocation": "2125:32:22",
            "parameters": {
              "id": 2577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2574,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "2183:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2578,
                  "src": "2167:25:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2573,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2167:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2576,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maxTickCrossedWithinBlock",
                  "nameLocation": "2209:25:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2578,
                  "src": "2202:32:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 2575,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2202:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2157:83:22"
            }
          },
          {
            "id": 2583,
            "nodeType": "EventDefinition",
            "src": "2371:52:22",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 2579,
              "nodeType": "StructuredDocumentation",
              "src": "2247:119:22",
              "text": "@notice Emitted when accountBalance is updated\n @param accountBalance The address of accountBalance contract"
            },
            "eventSelector": "2b28168781da733c8a034f84683b9c955f156de5e07e24920b1348f51445d3e6",
            "name": "AccountBalanceChanged",
            "nameLocation": "2377:21:22",
            "parameters": {
              "id": 2582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2581,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "accountBalance",
                  "nameLocation": "2407:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2583,
                  "src": "2399:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2399:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2398:24:22"
            }
          },
          {
            "id": 2593,
            "nodeType": "FunctionDefinition",
            "src": "2622:108:22",
            "nodes": [],
            "documentation": {
              "id": 2584,
              "nodeType": "StructuredDocumentation",
              "src": "2429:188:22",
              "text": "@notice The actual swap function\n @dev can only be called from ClearingHouse\n @param params The parameters of the swap\n @return swapResponse The result of the swap"
            },
            "functionSelector": "4314ca1c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nameLocation": "2631:4:22",
            "parameters": {
              "id": 2588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2587,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "2654:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2593,
                  "src": "2636:24:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SwapParams_$2521_memory_ptr",
                    "typeString": "struct IExchange.SwapParams"
                  },
                  "typeName": {
                    "id": 2586,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2585,
                      "name": "SwapParams",
                      "nameLocations": [
                        "2636:10:22"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2521,
                      "src": "2636:10:22"
                    },
                    "referencedDeclaration": 2521,
                    "src": "2636:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapParams_$2521_storage_ptr",
                      "typeString": "struct IExchange.SwapParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2635:26:22"
            },
            "returnParameters": {
              "id": 2592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2591,
                  "mutability": "mutable",
                  "name": "swapResponse",
                  "nameLocation": "2716:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2593,
                  "src": "2696:32:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SwapResponse_$2542_memory_ptr",
                    "typeString": "struct IExchange.SwapResponse"
                  },
                  "typeName": {
                    "id": 2590,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2589,
                      "name": "SwapResponse",
                      "nameLocations": [
                        "2696:12:22"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2542,
                      "src": "2696:12:22"
                    },
                    "referencedDeclaration": 2542,
                    "src": "2696:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapResponse_$2542_storage_ptr",
                      "typeString": "struct IExchange.SwapResponse"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2695:34:22"
            },
            "scope": 2678,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2606,
            "nodeType": "FunctionDefinition",
            "src": "3538:150:22",
            "nodes": [],
            "documentation": {
              "id": 2594,
              "nodeType": "StructuredDocumentation",
              "src": "2736:797:22",
              "text": "@notice Settle the funding payment for the time interval since the last settlement\n @dev This function should be called at the beginning of every high-level function, such as `openPosition()`\n      while it doesn't matter who calls this function\n      this function 1. settles personal funding payment 2. updates global funding growth\n      personal funding payment is settled whenever there is pending funding payment\n      the global funding growth update only happens once per unique timestamp (not blockNumber, due to Arbitrum)\n @return fundingPayment the funding payment of a trader in one market should be settled into owned realized Pnl\n @return fundingGrowthGlobal the up-to-date globalFundingGrowth, usually used for later calculations"
            },
            "functionSelector": "1e81ac33",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "settleFunding",
            "nameLocation": "3547:13:22",
            "parameters": {
              "id": 2599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2596,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "3569:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2606,
                  "src": "3561:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3561:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2598,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "3585:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2606,
                  "src": "3577:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3577:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3560:35:22"
            },
            "returnParameters": {
              "id": 2605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2601,
                  "mutability": "mutable",
                  "name": "fundingPayment",
                  "nameLocation": "3637:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2606,
                  "src": "3630:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2600,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3630:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2604,
                  "mutability": "mutable",
                  "name": "fundingGrowthGlobal",
                  "nameLocation": "3667:19:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2606,
                  "src": "3653:33:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Growth_$2506_memory_ptr",
                    "typeString": "struct Growth"
                  },
                  "typeName": {
                    "id": 2603,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2602,
                      "name": "Growth",
                      "nameLocations": [
                        "3653:6:22"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2506,
                      "src": "3653:6:22"
                    },
                    "referencedDeclaration": 2506,
                    "src": "3653:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Growth_$2506_storage_ptr",
                      "typeString": "struct Growth"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3629:58:22"
            },
            "scope": 2678,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2614,
            "nodeType": "FunctionDefinition",
            "src": "3955:138:22",
            "nodes": [],
            "documentation": {
              "id": 2607,
              "nodeType": "StructuredDocumentation",
              "src": "3694:256:22",
              "text": "@notice Get the max ticks allowed to be crossed within a block when reducing position\n @param baseToken Address of the base token\n @return maxTickCrossedWithinBlock The max ticks allowed to be crossed within a block when reducing position"
            },
            "functionSelector": "29386b7b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMaxTickCrossedWithinBlock",
            "nameLocation": "3964:28:22",
            "parameters": {
              "id": 2610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2609,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "4001:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2614,
                  "src": "3993:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2608,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3993:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3992:19:22"
            },
            "returnParameters": {
              "id": 2613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2612,
                  "mutability": "mutable",
                  "name": "maxTickCrossedWithinBlock",
                  "nameLocation": "4066:25:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2614,
                  "src": "4059:32:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 2611,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4059:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4058:34:22"
            },
            "scope": 2678,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2622,
            "nodeType": "FunctionDefinition",
            "src": "4349:130:22",
            "nodes": [],
            "documentation": {
              "id": 2615,
              "nodeType": "StructuredDocumentation",
              "src": "4099:245:22",
              "text": "@notice Get all the pending funding payment for a trader\n @return pendingFundingPayment The pending funding payment of the trader.\n Positive value means the trader pays funding, negative value means the trader receives funding."
            },
            "functionSelector": "80f57f11",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllPendingFundingPayment",
            "nameLocation": "4358:27:22",
            "parameters": {
              "id": 2618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2617,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "4394:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2622,
                  "src": "4386:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4386:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4385:16:22"
            },
            "returnParameters": {
              "id": 2621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2620,
                  "mutability": "mutable",
                  "name": "pendingFundingPayment",
                  "nameLocation": "4456:21:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2622,
                  "src": "4449:28:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2619,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4449:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4448:30:22"
            },
            "scope": 2678,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2630,
            "nodeType": "FunctionDefinition",
            "src": "4702:75:22",
            "nodes": [],
            "documentation": {
              "id": 2623,
              "nodeType": "StructuredDocumentation",
              "src": "4485:212:22",
              "text": "@notice Check if current price spread between market price and index twap is over maximum price spread.\n @param baseToken Address of the base token\n @return true if over the maximum price spread"
            },
            "functionSelector": "ff818011",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isOverPriceSpread",
            "nameLocation": "4711:17:22",
            "parameters": {
              "id": 2626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2625,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "4737:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2630,
                  "src": "4729:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4729:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4728:19:22"
            },
            "returnParameters": {
              "id": 2629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2628,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2630,
                  "src": "4771:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2627,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4771:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4770:6:22"
            },
            "scope": 2678,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2640,
            "nodeType": "FunctionDefinition",
            "src": "5175:146:22",
            "nodes": [],
            "documentation": {
              "id": 2631,
              "nodeType": "StructuredDocumentation",
              "src": "4783:387:22",
              "text": "@notice Get the pending funding payment for a trader in a given market\n @dev this is the view version of _updateFundingGrowth()\n @return pendingFundingPayment The pending funding payment of a trader in one market,\n including liquidity & balance coefficients. Positive value means the trader pays funding,\n negative value means the trader receives funding."
            },
            "functionSelector": "cb379aa2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingFundingPayment",
            "nameLocation": "5184:24:22",
            "parameters": {
              "id": 2636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2633,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "5217:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2640,
                  "src": "5209:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5209:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2635,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "5233:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2640,
                  "src": "5225:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2634,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5225:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5208:35:22"
            },
            "returnParameters": {
              "id": 2639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2638,
                  "mutability": "mutable",
                  "name": "pendingFundingPayment",
                  "nameLocation": "5298:21:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2640,
                  "src": "5291:28:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2637,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5291:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5290:30:22"
            },
            "scope": 2678,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2650,
            "nodeType": "FunctionDefinition",
            "src": "5644:140:22",
            "nodes": [],
            "documentation": {
              "id": 2641,
              "nodeType": "StructuredDocumentation",
              "src": "5327:312:22",
              "text": "@notice Get the square root of the market twap price with the given time interval\n @dev The return value is a X96 number\n @param baseToken Address of the base token\n @param twapInterval The time interval in seconds\n @return sqrtMarkTwapX96 The square root of the market twap price"
            },
            "functionSelector": "99e4a771",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSqrtMarkTwapX96",
            "nameLocation": "5653:18:22",
            "parameters": {
              "id": 2646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2643,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "5680:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2650,
                  "src": "5672:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5672:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2645,
                  "mutability": "mutable",
                  "name": "twapInterval",
                  "nameLocation": "5698:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2650,
                  "src": "5691:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2644,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5691:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5671:40:22"
            },
            "returnParameters": {
              "id": 2649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2648,
                  "mutability": "mutable",
                  "name": "sqrtMarkTwapX96",
                  "nameLocation": "5767:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2650,
                  "src": "5759:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 2647,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "5759:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5758:25:22"
            },
            "scope": 2678,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2659,
            "nodeType": "FunctionDefinition",
            "src": "6152:131:22",
            "nodes": [],
            "documentation": {
              "id": 2651,
              "nodeType": "StructuredDocumentation",
              "src": "5790:357:22",
              "text": "@notice Get the pnl that can be realized if trader reduce position\n @dev This function normally won't be needed by traders, but it might be useful for 3rd party\n @param params The params needed to do the query, encoded as `RealizePnlParams` in calldata\n @return pnlToBeRealized The pnl that can be realized if trader reduce position"
            },
            "functionSelector": "1393a469",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPnlToBeRealized",
            "nameLocation": "6161:18:22",
            "parameters": {
              "id": 2655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2654,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "6204:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2659,
                  "src": "6180:30:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RealizePnlParams_$2562_memory_ptr",
                    "typeString": "struct IExchange.RealizePnlParams"
                  },
                  "typeName": {
                    "id": 2653,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2652,
                      "name": "RealizePnlParams",
                      "nameLocations": [
                        "6180:16:22"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2562,
                      "src": "6180:16:22"
                    },
                    "referencedDeclaration": 2562,
                    "src": "6180:16:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RealizePnlParams_$2562_storage_ptr",
                      "typeString": "struct IExchange.RealizePnlParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6179:32:22"
            },
            "returnParameters": {
              "id": 2658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2657,
                  "mutability": "mutable",
                  "name": "pnlToBeRealized",
                  "nameLocation": "6266:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2659,
                  "src": "6259:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2656,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6259:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6258:24:22"
            },
            "scope": 2678,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2665,
            "nodeType": "FunctionDefinition",
            "src": "6393:66:22",
            "nodes": [],
            "documentation": {
              "id": 2660,
              "nodeType": "StructuredDocumentation",
              "src": "6289:99:22",
              "text": "@notice Get `OrderBook` contract address\n @return orderBook `OrderBook` contract address"
            },
            "functionSelector": "b248c4ef",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderBook",
            "nameLocation": "6402:12:22",
            "parameters": {
              "id": 2661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6414:2:22"
            },
            "returnParameters": {
              "id": 2664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2663,
                  "mutability": "mutable",
                  "name": "orderBook",
                  "nameLocation": "6448:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2665,
                  "src": "6440:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6440:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6439:19:22"
            },
            "scope": 2678,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2671,
            "nodeType": "FunctionDefinition",
            "src": "6584:76:22",
            "nodes": [],
            "documentation": {
              "id": 2666,
              "nodeType": "StructuredDocumentation",
              "src": "6465:114:22",
              "text": "@notice Get `AccountBalance` contract address\n @return accountBalance `AccountBalance` contract address"
            },
            "functionSelector": "6896fabf",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountBalance",
            "nameLocation": "6593:17:22",
            "parameters": {
              "id": 2667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6610:2:22"
            },
            "returnParameters": {
              "id": 2670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2669,
                  "mutability": "mutable",
                  "name": "accountBalance",
                  "nameLocation": "6644:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2671,
                  "src": "6636:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6636:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6635:24:22"
            },
            "scope": 2678,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2677,
            "nodeType": "FunctionDefinition",
            "src": "6794:104:22",
            "nodes": [],
            "documentation": {
              "id": 2672,
              "nodeType": "StructuredDocumentation",
              "src": "6666:123:22",
              "text": "@notice Get `ClearingHouseConfig` contract address\n @return clearingHouse `ClearingHouseConfig` contract address"
            },
            "functionSelector": "aa2a8294",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getClearingHouseConfig",
            "nameLocation": "6803:22:22",
            "parameters": {
              "id": 2673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6825:2:22"
            },
            "returnParameters": {
              "id": 2676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2675,
                  "mutability": "mutable",
                  "name": "clearingHouse",
                  "nameLocation": "6883:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2677,
                  "src": "6875:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6875:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6874:23:22"
            },
            "scope": 2678,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IExchange",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          2678
        ],
        "name": "IExchange",
        "nameLocation": "462:9:22",
        "scope": 2679,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 22
}